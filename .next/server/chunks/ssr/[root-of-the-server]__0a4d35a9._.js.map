{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 13, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/utils/utils.ts"],"sourcesContent":["import { Dispatch, SetStateAction } from \"react\";\nimport {\n  PlayerCategoriesRaters,\n  PlayerDetailedStats,\n  Team,\n  TeamDetailsData,\n} from \"./types\";\n\nexport const parseNegativeValue = (value: number, limit?: number): number => {\n  const trueLimit = limit ?? 0;\n  return value < trueLimit ? trueLimit : value;\n};\n\nexport const computeNewSalary = (\n  salary: number,\n  keeperHistory: number,\n  omitDelta: boolean,\n  raterDelta: number\n) => {\n  const valueWithKeeps =\n    keeperHistory >= 2 ? salary + (keeperHistory - 1) * 5 : salary;\n  if (!raterDelta || omitDelta) {\n    return valueWithKeeps;\n  }\n  if (raterDelta < -3) {\n    return valueWithKeeps - 5;\n  } else if (raterDelta < -2.5) {\n    return valueWithKeeps - 4;\n  } else if (raterDelta < -2) {\n    return valueWithKeeps - 3;\n  } else if (raterDelta < -1.5) {\n    return valueWithKeeps - 2;\n  } else if (raterDelta < -1) {\n    return valueWithKeeps - 1;\n  } else if (raterDelta < -0.5) {\n    return valueWithKeeps;\n  } else if (raterDelta < 0.5) {\n    return valueWithKeeps + 1;\n  } else if (raterDelta < 1.5) {\n    return valueWithKeeps + 2;\n  } else if (raterDelta < 2) {\n    return valueWithKeeps + 3;\n  } else if (raterDelta < 3) {\n    return valueWithKeeps + 4;\n  } else {\n    return valueWithKeeps + 5;\n  }\n};\n\nexport const getNewSalariesByPlayerId = (team?: Team) => {\n  const salariesMap = new Map<number, number>();\n  team?.roster.forEach((player) => {\n    salariesMap.set(\n      player.id,\n      parseNegativeValue(\n        computeNewSalary(\n          player.salary,\n          player.keeperHistory.length,\n          player.previousRater === 0,\n          player.currentRater - parseNegativeValue(player.previousRater)\n        ),\n        1\n      )\n    );\n  });\n  return salariesMap;\n};\n\nconst getTeamTotalProjectedSalary = (\n  newSalariesByPlayerId: Map<number, number>\n) => {\n  const salaries: number[] = [];\n  newSalariesByPlayerId.forEach((value) => {\n    salaries.push(value);\n  });\n  if (!salaries.length) {\n    return 0;\n  }\n  return salaries.reduce((partialSum, a) => partialSum + a, 0);\n};\n\nconst getTeamKeepersSalaries = (\n  newSalariesByPlayerId: Map<number, number>,\n  keepers?: number[]\n) => {\n  const salaries: number[] = [];\n  if (!keepers || keepers.length === 0) {\n    return 0;\n  }\n  keepers.forEach((id) => {\n    const value = newSalariesByPlayerId.get(id);\n    if (value) {\n      salaries.push(value);\n    }\n  });\n  if (salaries.length === 0) {\n    return 0;\n  }\n  return salaries.reduce((partialSum, a) => partialSum + a, 0);\n};\n\nexport const reduceStats = (stats: PlayerDetailedStats[]) => {\n  return stats.reduce(\n    (partialSum, a) => {\n      return {\n        FGA: partialSum.FGA + a.FGA,\n        FGM: partialSum.FGM + a.FGM,\n        FTA: partialSum.FTA + a.FTA,\n        FTM: partialSum.FTM + a.FTM,\n        \"3PM\": partialSum[\"3PM\"] + a[\"3PM\"],\n        REB: partialSum.REB + a.REB,\n        AST: partialSum.AST + a.AST,\n        STL: partialSum.STL + a.STL,\n        BLK: partialSum.BLK + a.BLK,\n        TO: partialSum.TO + a.TO,\n        PTS: partialSum.PTS + a.PTS,\n      };\n    },\n    {\n      FGA: 0,\n      FGM: 0,\n      FTA: 0,\n      FTM: 0,\n      \"3PM\": 0,\n      REB: 0,\n      AST: 0,\n      STL: 0,\n      BLK: 0,\n      TO: 0,\n      PTS: 0,\n    }\n  );\n};\n\nexport const getTeamTotals = (\n  team: Team,\n  newSalariesByPlayerId: Map<number, number>,\n  keepers: number[]\n) => {\n  const rater2024 = team.roster\n    .map((player) => player.previousRater)\n    .reduce((partialSum, a) => partialSum + a, 0);\n  const rater2025 = team.roster\n    .map((player) => player.currentRater)\n    .reduce((partialSum, a) => partialSum + a, 0);\n  const currentSalary = team.roster\n    .filter((player) => !player.injuredSpot)\n    .map((player) => player.salary)\n    .reduce((partialSum, a) => partialSum + a, 0);\n\n  const stats: PlayerDetailedStats = reduceStats(\n    team.roster.map((player) => player.detailedStats!)\n  );\n\n  const projectedSalary = getTeamTotalProjectedSalary(newSalariesByPlayerId);\n  const projectedKeepersSalaries = getTeamKeepersSalaries(\n    newSalariesByPlayerId,\n    keepers\n  );\n\n  return {\n    rater2025,\n    rater2024,\n    currentSalary,\n    projectedSalary,\n    projectedKeepersSalaries,\n    stats,\n  };\n};\n\nexport const parseRanking = (ranking: number) => {\n  if (ranking < 1) {\n    return \"erreur\";\n  } else if (ranking === 1) {\n    return \"1er\";\n  } else {\n    return `${ranking}e`;\n  }\n};\n\nexport const getTeamStatsAfterTrade = (\n  teamStats: PlayerDetailedStats,\n  outStats: PlayerDetailedStats,\n  inStats: PlayerDetailedStats\n): PlayerCategoriesRaters => {\n  const fg =\n    teamStats.FGM / teamStats.FGA -\n    (teamStats.FGM - outStats.FGM + inStats.FGM) /\n      (teamStats.FGA - outStats.FGA + inStats.FGA);\n  const ft =\n    teamStats.FTM / teamStats.FTA -\n    (teamStats.FTM - outStats.FTM + inStats.FTM) /\n      (teamStats.FTA - outStats.FTA + inStats.FTA);\n\n  return {\n    FG: fg,\n    FT: ft,\n    \"3PM\": inStats[\"3PM\"] - outStats[\"3PM\"],\n    REB: inStats.REB - outStats.REB,\n    AST: inStats.AST - outStats.AST,\n    STL: inStats.STL - outStats.STL,\n    BLK: inStats.BLK - outStats.BLK,\n    TO: inStats.TO - outStats.TO,\n    PTS: inStats.PTS - outStats.PTS,\n  };\n};\n\nexport const getDataByTeamId = (teams: Team[], selectedKeepers: number[]) => {\n  const dataMap = new Map<number, TeamDetailsData>();\n  teams.forEach((team) => {\n    const newSalariesByPlayerId = getNewSalariesByPlayerId(team);\n    const teamData = getTeamTotals(\n      team,\n      newSalariesByPlayerId,\n      selectedKeepers\n    );\n    dataMap.set(team.id, { newSalariesByPlayerId, totals: teamData, team });\n  });\n  return dataMap;\n};\n\nexport const downloadElement = (\n  data: unknown,\n  fileName: string,\n  setIsUpdating?: Dispatch<SetStateAction<boolean>>\n) => {\n  const element = document.createElement(\"a\");\n  const textFile = new Blob([JSON.stringify(data)], {\n    type: \"application/json\",\n  });\n  element.href = URL.createObjectURL(textFile);\n  element.download = fileName + \".json\";\n  document.body.appendChild(element);\n  element.click();\n  if (setIsUpdating) {\n    setIsUpdating(false);\n  }\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/context/DataContext.tsx"],"sourcesContent":["\"use client\";\n\nimport {\n  createContext,\n  Dispatch,\n  ReactNode,\n  SetStateAction,\n  useCallback,\n  useMemo,\n  useState,\n  useEffect,\n} from \"react\";\nimport { getDataByTeamId } from \"../utils/utils\";\nimport { Team, TeamDetailsData, UnpickablePlayer } from \"../utils/types\";\n\ninterface ContextData {\n  teams: Team[];\n  activeTeamId: number;\n  setActiveTeamId: Dispatch<SetStateAction<number>>;\n  selectedKeepers: number[];\n  setSelectedKeepers: Dispatch<SetStateAction<number[]>>;\n  dataByTeamId: Map<number, TeamDetailsData>;\n  unpickablePlayers: UnpickablePlayer[];\n  lastUpdate: Date;\n  handleDataRefresh: (\n    newTeams: Team[],\n    newUnpickables: UnpickablePlayer[],\n    newUpdate: Date\n  ) => void;\n  isUpdating: boolean;\n  setIsUpdating: Dispatch<SetStateAction<boolean>>;\n  isLoading: boolean;\n}\n\nexport const DataContext = createContext<ContextData>({} as ContextData);\n\nexport const DataProvider = ({ children }: { children: ReactNode }) => {\n  const [activeTeamId, setActiveTeamId] = useState(0);\n  const [selectedKeepers, setSelectedKeepers] = useState<number[]>([]);\n  const [teams, setTeams] = useState<Team[]>([]);\n  const [unpickablePlayers, setUnpickablePlayers] = useState<\n    UnpickablePlayer[]\n  >([]);\n  const [lastUpdate, setLastUpdate] = useState<Date>(new Date());\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Load initial data from API\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const response = await fetch(\"/api/rosters\");\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch rosters\");\n        }\n        const data = await response.json();\n        setTeams(data.teams);\n        setUnpickablePlayers(data.unpickablePlayers);\n        setLastUpdate(new Date(data.lastUpdate));\n      } catch (error) {\n        console.error(\"Error loading data:\", error);\n        // Fallback to empty state or handle error as needed\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadData();\n  }, []);\n\n  const dataByTeamId = useMemo(() => {\n    return getDataByTeamId(teams, selectedKeepers);\n  }, [selectedKeepers, teams]);\n\n  const handleDataRefresh = useCallback(\n    (newTeams: Team[], newUnpickables: UnpickablePlayer[], newUpdate: Date) => {\n      setTeams(newTeams);\n      setUnpickablePlayers(newUnpickables);\n      setLastUpdate(newUpdate);\n      setIsUpdating(false);\n    },\n    []\n  );\n\n  return (\n    <DataContext.Provider\n      value={{\n        teams,\n        activeTeamId,\n        setActiveTeamId,\n        selectedKeepers,\n        setSelectedKeepers,\n        dataByTeamId,\n        unpickablePlayers,\n        lastUpdate,\n        handleDataRefresh,\n        isUpdating,\n        setIsUpdating,\n        isLoading,\n      }}\n    >\n      {children}\n    </DataContext.Provider>\n  );\n};\n"],"names":[],"mappings":";;;;;AAEA;AAUA;AAZA;;;;AAkCO,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAe,CAAC;AAEhD,MAAM,eAAe,CAAC,EAAE,QAAQ,EAA2B;IAChE,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACjD,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACnE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAU,EAAE;IAC7C,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAEvD,EAAE;IACJ,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAQ,IAAI;IACvD,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,6BAA6B;IAC7B,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW;YACf,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,CAAC,SAAS,EAAE,EAAE;oBAChB,MAAM,IAAI,MAAM;gBAClB;gBACA,MAAM,OAAO,MAAM,SAAS,IAAI;gBAChC,SAAS,KAAK,KAAK;gBACnB,qBAAqB,KAAK,iBAAiB;gBAC3C,cAAc,IAAI,KAAK,KAAK,UAAU;YACxC,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,uBAAuB;YACrC,oDAAoD;YACtD,SAAU;gBACR,aAAa;YACf;QACF;QAEA;IACF,GAAG,EAAE;IAEL,MAAM,eAAe,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QAC3B,OAAO,CAAA,GAAA,qHAAA,CAAA,kBAAe,AAAD,EAAE,OAAO;IAChC,GAAG;QAAC;QAAiB;KAAM;IAE3B,MAAM,oBAAoB,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAClC,CAAC,UAAkB,gBAAoC;QACrD,SAAS;QACT,qBAAqB;QACrB,cAAc;QACd,cAAc;IAChB,GACA,EAAE;IAGJ,qBACE,8OAAC,YAAY,QAAQ;QACnB,OAAO;YACL;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;QACF;kBAEC;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/utils/style.ts"],"sourcesContent":["export const createStyles =\n  <TValue>() =>\n  <T extends Record<PropertyKey, TValue>>(v: T): T =>\n    v;\n\nexport const rootColors = {\n  primary: \"#e45e04\",\n  background: \"#242424\",\n  fontColor: \"#ffeede\",\n  componentBackground: \"#030100\",\n};\n"],"names":[],"mappings":";;;;AAAO,MAAM,eACX,IACA,CAAwC,IACtC;AAEG,MAAM,aAAa;IACxB,SAAS;IACT,YAAY;IACZ,WAAW;IACX,qBAAqB;AACvB","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/NavButton.tsx"],"sourcesContent":["import { CSSProperties } from \"react\";\nimport { createStyles } from \"../utils/style\";\nimport { OverridableComponent } from \"@mui/material/OverridableComponent\";\nimport { SvgIconTypeMap } from \"@mui/material\";\n\ninterface ButtonProps {\n  buttonIcon: OverridableComponent<SvgIconTypeMap<object, \"svg\">> & {\n    muiName: string;\n  };\n  isDisabled?: boolean;\n  onClickButton: () => void;\n}\nexport const NavButton = ({\n  buttonIcon,\n  isDisabled,\n  onClickButton,\n}: ButtonProps) => {\n  const styles = createStyles<CSSProperties>()({\n    button: {\n      borderRadius: \"1.25rem\",\n      border: \"none\",\n      fontSize: \"1rem\",\n      cursor: \"pointer\",\n      width: \"2rem\",\n      height: \"2rem\",\n      transition: \"all 0.5s\",\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n    },\n  });\n\n  const NavIcon = buttonIcon;\n\n  return (\n    <button style={styles.button} disabled={isDisabled} onClick={onClickButton}>\n      <NavIcon />\n    </button>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;;;AAWO,MAAM,YAAY,CAAC,EACxB,UAAU,EACV,UAAU,EACV,aAAa,EACD;IACZ,MAAM,SAAS,CAAA,GAAA,qHAAA,CAAA,eAAY,AAAD,IAAmB;QAC3C,QAAQ;YACN,cAAc;YACd,QAAQ;YACR,UAAU;YACV,QAAQ;YACR,OAAO;YACP,QAAQ;YACR,YAAY;YACZ,SAAS;YACT,gBAAgB;YAChB,YAAY;QACd;IACF;IAEA,MAAM,UAAU;IAEhB,qBACE,8OAAC;QAAO,OAAO,OAAO,MAAM;QAAE,UAAU;QAAY,SAAS;kBAC3D,cAAA,8OAAC;;;;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/Header.tsx"],"sourcesContent":["\"use client\";\n\nimport { CSSProperties, ReactElement, useContext } from \"react\";\nimport { createStyles, rootColors } from \"../utils/style\";\nimport { useRouter, usePathname } from \"next/navigation\";\nimport { NavButton } from \"./NavButton\";\nimport GroupsIcon from \"@mui/icons-material/Groups\";\nimport CompareArrowsIcon from \"@mui/icons-material/CompareArrows\";\nimport AssistWalkerIcon from \"@mui/icons-material/AssistWalker\";\nimport LeaderboardIcon from \"@mui/icons-material/Leaderboard\";\nimport GavelIcon from \"@mui/icons-material/Gavel\";\nimport QueryStatsIcon from \"@mui/icons-material/QueryStats\";\nimport AutoStoriesIcon from \"@mui/icons-material/AutoStories\";\nimport { DataContext } from \"../context/DataContext\";\n\nexport const Header = (): ReactElement => {\n  const router = useRouter();\n  const pathname = usePathname();\n  const { setSelectedKeepers } = useContext(DataContext);\n\n  const styles = createStyles<CSSProperties>()({\n    header: {\n      height: \"5.5rem\",\n    },\n    h1: {\n      fontSize: \"2rem\",\n      textAlign: \"center\",\n      color: rootColors.primary,\n      marginBottom: \"0.5rem\",\n    },\n    nav: {\n      width: \"100%\",\n      height: \"2rem\",\n      padding: \"0 0.5rem\",\n      display: \"flex\",\n      flexFlow: \"row nowrap\",\n      justifyContent: \"space-evenly\",\n    },\n  });\n\n  const navButtonsProps = [\n    { icon: GroupsIcon, navigateTo: \"/\" },\n    { icon: CompareArrowsIcon, navigateTo: \"/trade\" },\n    { icon: LeaderboardIcon, navigateTo: \"/teams\" },\n    { icon: AssistWalkerIcon, navigateTo: \"/injuries\" },\n    { icon: QueryStatsIcon, navigateTo: \"/advanced\" },\n    { icon: AutoStoriesIcon, navigateTo: \"history\" },\n    { icon: GavelIcon, navigateTo: \"/rules\" },\n  ];\n\n  const handleNavigation = (path: string) => {\n    router.push(path);\n  };\n\n  return (\n    <header style={styles.header}>\n      <h1 style={styles.h1}>🏀 Fantasy league BBF 🏀</h1>\n      <nav style={styles.nav}>\n        {navButtonsProps.map((navButton, index) => (\n          <NavButton\n            buttonIcon={navButton.icon}\n            onClickButton={() => {\n              setSelectedKeepers([]);\n              handleNavigation(navButton.navigateTo);\n            }}\n            key={index}\n          />\n        ))}\n      </nav>\n    </header>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAbA;;;;;;;;;;;;;;AAeO,MAAM,SAAS;IACpB,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IACvB,MAAM,WAAW,CAAA,GAAA,kIAAA,CAAA,cAAW,AAAD;IAC3B,MAAM,EAAE,kBAAkB,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,8HAAA,CAAA,cAAW;IAErD,MAAM,SAAS,CAAA,GAAA,qHAAA,CAAA,eAAY,AAAD,IAAmB;QAC3C,QAAQ;YACN,QAAQ;QACV;QACA,IAAI;YACF,UAAU;YACV,WAAW;YACX,OAAO,qHAAA,CAAA,aAAU,CAAC,OAAO;YACzB,cAAc;QAChB;QACA,KAAK;YACH,OAAO;YACP,QAAQ;YACR,SAAS;YACT,SAAS;YACT,UAAU;YACV,gBAAgB;QAClB;IACF;IAEA,MAAM,kBAAkB;QACtB;YAAE,MAAM,2JAAA,CAAA,UAAU;YAAE,YAAY;QAAI;QACpC;YAAE,MAAM,kKAAA,CAAA,UAAiB;YAAE,YAAY;QAAS;QAChD;YAAE,MAAM,gKAAA,CAAA,UAAe;YAAE,YAAY;QAAS;QAC9C;YAAE,MAAM,iKAAA,CAAA,UAAgB;YAAE,YAAY;QAAY;QAClD;YAAE,MAAM,+JAAA,CAAA,UAAc;YAAE,YAAY;QAAY;QAChD;YAAE,MAAM,gKAAA,CAAA,UAAe;YAAE,YAAY;QAAU;QAC/C;YAAE,MAAM,0JAAA,CAAA,UAAS;YAAE,YAAY;QAAS;KACzC;IAED,MAAM,mBAAmB,CAAC;QACxB,OAAO,IAAI,CAAC;IACd;IAEA,qBACE,8OAAC;QAAO,OAAO,OAAO,MAAM;;0BAC1B,8OAAC;gBAAG,OAAO,OAAO,EAAE;0BAAE;;;;;;0BACtB,8OAAC;gBAAI,OAAO,OAAO,GAAG;0BACnB,gBAAgB,GAAG,CAAC,CAAC,WAAW,sBAC/B,8OAAC,+HAAA,CAAA,YAAS;wBACR,YAAY,UAAU,IAAI;wBAC1B,eAAe;4BACb,mBAAmB,EAAE;4BACrB,iBAAiB,UAAU,UAAU;wBACvC;uBACK;;;;;;;;;;;;;;;;AAMjB","debugId":null}},
    {"offset": {"line": 477, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/utils/types.ts"],"sourcesContent":["export enum AcquisitionTypeEnum {\n  DRAFT = \"DRAFT\",\n  ADD = \"ADD\",\n  TRADE = \"TRADE\",\n}\n\nexport enum StatsCategories {\n  FG = \"FG\",\n  FT = \"FT\",\n  \"3PM\" = \"3PM\",\n  REB = \"REB\",\n  AST = \"AST\",\n  STL = \"STL\",\n  BLK = \"BLK\",\n  TO = \"TO\",\n  PTS = \"PTS\",\n}\n\nexport enum FilterCategories {\n  TEAM = \"team\",\n  RATER = \"rater\",\n  SALARY = \"salary\",\n  GAMES = \"games\",\n  PROJECTION = \"projection\",\n}\n\nexport enum DetailedStatsCategories {\n  FGA = \"FGA\",\n  FGM = \"FGM\",\n  FTA = \"FTA\",\n  FTM = \"FTM\",\n  \"3PM\" = \"3PM\",\n  REB = \"REB\",\n  AST = \"AST\",\n  STL = \"STL\",\n  BLK = \"BLK\",\n  TO = \"TO\",\n  PTS = \"PTS\",\n}\n\nexport type PlayerCategoriesRaters = { [key in StatsCategories]: number };\n\nexport type PlayerDetailedStats = { [key in DetailedStatsCategories]: number };\n\nexport interface Player {\n  id: number;\n  fullName: string;\n  salary: number;\n  keeperHistory: string[];\n  previousRater: number;\n  currentRater: number;\n  injuredSpot: boolean;\n  gamesPlayed: number;\n  categoriesRaters: PlayerCategoriesRaters;\n  previousCategoriesRaters: PlayerCategoriesRaters;\n  detailedStats: PlayerDetailedStats;\n  hasNotPlayedLastSeason?: boolean;\n}\n\nexport interface Team {\n  id: number;\n  name: string;\n  abbreviation: string;\n  roster: Player[];\n}\n\nexport interface TeamDetailsData {\n  team: Team;\n  newSalariesByPlayerId: Map<number, number>;\n  totals: {\n    rater2025: number;\n    rater2024: number;\n    currentSalary: number;\n    projectedSalary: number;\n    projectedKeepersSalaries: number;\n    stats: PlayerDetailedStats;\n  };\n}\n\nexport interface PlayerRatings {\n  totalRating: number;\n  statRankings: { forStat: number; rating: number }[];\n}\n\nexport interface RawPlayerStats {\n  \"13\": number; // FGM\n  \"14\": number; // FGA\n  \"15\": number; // FTM\n  \"16\": number; // FTA\n  \"26\": number; // AST\n  \"27\": number; // BLK\n  \"29\": number; // PTS\n  \"30\": number; // REB\n  \"31\": number; // STL\n  \"32\": number; // TO\n  \"33\": number; // 3PM\n  \"42\": number; // games played\n}\n\nexport interface RatedRawPlayer {\n  id: number;\n  keeperValue: number;\n  keeperValueFuture: number;\n  onteamId: number;\n  ratings: {\n    \"0\": PlayerRatings;\n  };\n  player: {\n    fullName: string;\n    id: number;\n    stats: {\n      id: string;\n      stats: RawPlayerStats;\n    }[];\n    injured: boolean;\n  };\n}\n\nexport interface RawPlayer {\n  lineupSlotId: number;\n  playerId: number;\n  acquisitionType: AcquisitionTypeEnum;\n  playerPoolEntry: Omit<RatedRawPlayer, \"ratings\">;\n}\n\nexport interface RawTeam {\n  id: number;\n  name: string;\n  roster: { entries: RawPlayer[] };\n}\n\nexport interface UnpickablePlayer {\n  name: string;\n  id: number;\n  outForSeason?: boolean | undefined;\n}\n\nexport interface SeasonRanking {\n  season: number;\n  ranking: number;\n  teamName: string;\n  points: number;\n}\n\nexport interface HistoryRanking {\n  totalPoints: number;\n  ownerName: string;\n  seasonsRankings: SeasonRanking[];\n}\n\ninterface FilterMinMax {\n  min?: number;\n  max?: number;\n}\nexport interface FiltersType {\n  team?: string;\n  rater?: FilterMinMax;\n  salary?: FilterMinMax;\n  games?: FilterMinMax;\n  projection?: FilterMinMax;\n}\n"],"names":[],"mappings":";;;;;;AAAO,IAAA,AAAK,6CAAA;;;;WAAA;;AAML,IAAA,AAAK,yCAAA;;;;;;;;;;WAAA;;AAYL,IAAA,AAAK,0CAAA;;;;;;WAAA;;AAQL,IAAA,AAAK,iDAAA;;;;;;;;;;;;WAAA","debugId":null}},
    {"offset": {"line": 530, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/utils/data.ts"],"sourcesContent":["import {\n  AcquisitionTypeEnum,\n  DetailedStatsCategories,\n  HistoryRanking,\n  Player,\n  PlayerCategoriesRaters,\n  PlayerDetailedStats,\n  PlayerRatings,\n  RawPlayerStats,\n  RatedRawPlayer,\n  RawPlayer,\n  RawTeam,\n  StatsCategories,\n  Team,\n  UnpickablePlayer,\n} from \"./types\";\nimport historyData from \"../assets/history/history.json\";\n\nconst RaterCategories = new Map([\n  [19, StatsCategories.FG],\n  [20, StatsCategories.FT],\n  [17, StatsCategories[\"3PM\"]],\n  [6, StatsCategories.REB],\n  [3, StatsCategories.AST],\n  [2, StatsCategories.STL],\n  [1, StatsCategories.BLK],\n  [11, StatsCategories.TO],\n  [0, StatsCategories.PTS],\n]);\n\nconst basePlayerRaters: PlayerCategoriesRaters = {\n  [StatsCategories.FG]: 0,\n  [StatsCategories.FT]: 0,\n  [StatsCategories[\"3PM\"]]: 0,\n  [StatsCategories.REB]: 0,\n  [StatsCategories.AST]: 0,\n  [StatsCategories.STL]: 0,\n  [StatsCategories.BLK]: 0,\n  [StatsCategories.TO]: 0,\n  [StatsCategories.PTS]: 0,\n};\n\nconst RawStatsCategories = new Map([\n  [\"13\", DetailedStatsCategories.FGM],\n  [\"14\", DetailedStatsCategories.FGA],\n  [\"15\", DetailedStatsCategories.FTM],\n  [\"16\", DetailedStatsCategories.FTA],\n  [\"33\", DetailedStatsCategories[\"3PM\"]],\n  [\"30\", DetailedStatsCategories.REB],\n  [\"26\", DetailedStatsCategories.AST],\n  [\"31\", DetailedStatsCategories.STL],\n  [\"27\", DetailedStatsCategories.BLK],\n  [\"32\", DetailedStatsCategories.TO],\n  [\"29\", DetailedStatsCategories.PTS],\n]);\nconst rawStatsKeys = [\n  \"13\",\n  \"14\",\n  \"15\",\n  \"16\",\n  \"26\",\n  \"27\",\n  \"29\",\n  \"30\",\n  \"31\",\n  \"32\",\n  \"33\",\n];\n\nconst basePlayerStats: PlayerDetailedStats = {\n  [DetailedStatsCategories.FGA]: 0,\n  [DetailedStatsCategories.FGM]: 0,\n  [DetailedStatsCategories.FTM]: 0,\n  [DetailedStatsCategories.FTA]: 0,\n  [DetailedStatsCategories[\"3PM\"]]: 0,\n  [DetailedStatsCategories.REB]: 0,\n  [DetailedStatsCategories.AST]: 0,\n  [DetailedStatsCategories.STL]: 0,\n  [DetailedStatsCategories.BLK]: 0,\n  [DetailedStatsCategories.TO]: 0,\n  [DetailedStatsCategories.PTS]: 0,\n};\n\nconst filterPlayerKeys = (rawPlayer: RawPlayer): Player => {\n  return {\n    id: rawPlayer.playerId,\n    fullName: rawPlayer.playerPoolEntry.player.fullName,\n    keeperHistory: [],\n    salary: rawPlayer.playerPoolEntry.keeperValueFuture,\n    previousRater: 0,\n    currentRater: 0,\n    gamesPlayed: 0,\n    injuredSpot: rawPlayer.lineupSlotId === 13,\n    categoriesRaters: basePlayerRaters,\n    previousCategoriesRaters: basePlayerRaters,\n    detailedStats: basePlayerStats,\n  };\n};\n\nconst buildPlayerRaters = (\n  rawRater: PlayerRatings | undefined\n): PlayerCategoriesRaters => {\n  const output = basePlayerRaters;\n  if (rawRater) {\n    rawRater.statRankings.forEach((value) => {\n      const key = RaterCategories.get(value.forStat);\n      if (key) {\n        output[key] = value.rating;\n      }\n    });\n  }\n  return { ...output };\n};\n\nconst buildPlayerStats = (\n  rawStats: RawPlayerStats | undefined\n): PlayerDetailedStats => {\n  const output = basePlayerStats;\n  if (rawStats) {\n    for (const [key, value] of Object.entries(rawStats)) {\n      if (rawStatsKeys.includes(key)) {\n        const parsedKey = RawStatsCategories.get(key);\n        if (parsedKey) {\n          output[parsedKey] = value;\n        }\n      }\n    }\n  }\n  return { ...output };\n};\n\nconst addFreeAgent = (\n  newPlayer: RawPlayer,\n  lastSeasonRaters: RatedRawPlayer[],\n  rosterToBuild: Player[],\n  currentRater: PlayerRatings | undefined,\n  gamesPlayed: number,\n  rawStats: RawPlayerStats | undefined\n) => {\n  const parsedPlayer = filterPlayerKeys(newPlayer);\n  const previousRaters = lastSeasonRaters.find(\n    (ratedPlayer) => ratedPlayer.id === parsedPlayer.id\n  )?.ratings[\"0\"];\n  parsedPlayer.previousRater = previousRaters ? previousRaters.totalRating : 0;\n  parsedPlayer.currentRater = currentRater?.totalRating ?? 0;\n  parsedPlayer.gamesPlayed = gamesPlayed;\n  parsedPlayer.categoriesRaters = buildPlayerRaters(currentRater);\n  parsedPlayer.previousCategoriesRaters = buildPlayerRaters(previousRaters);\n  parsedPlayer.detailedStats = buildPlayerStats(rawStats);\n  rosterToBuild.push(parsedPlayer);\n};\n\nconst initPlayersMap = (\n  playersByPlayerId: Map<number, Player>,\n  previousRosters: Team[]\n) => {\n  previousRosters.forEach((team) => {\n    team.roster.forEach((player) => {\n      playersByPlayerId.set(player.id, player);\n    });\n  });\n};\n\nconst addTradedPlayer = (\n  newPlayer: RawPlayer,\n  playersByPlayerId: Map<number, Player>,\n  previousRosters: Team[],\n  rosterToBuild: Player[],\n  lastSeasonRaters: RatedRawPlayer[],\n  currentRater: PlayerRatings | undefined,\n  gamesPlayed: number,\n  rawStats: RawPlayerStats | undefined\n) => {\n  if (playersByPlayerId.size === 0) {\n    initPlayersMap(playersByPlayerId, previousRosters);\n  }\n  const playerToAdd = playersByPlayerId.get(newPlayer.playerId);\n  if (!playerToAdd) {\n    addFreeAgent(\n      newPlayer,\n      lastSeasonRaters,\n      rosterToBuild,\n      currentRater,\n      gamesPlayed,\n      rawStats\n    );\n    return;\n  }\n  rosterToBuild.push({\n    ...playerToAdd,\n    injuredSpot: newPlayer.lineupSlotId === 13,\n    currentRater: currentRater?.totalRating ?? 0,\n    gamesPlayed,\n    categoriesRaters: buildPlayerRaters(currentRater),\n    detailedStats: buildPlayerStats(rawStats),\n  });\n};\n\nexport const addNewPlayers = (\n  previousRosters: Team[],\n  newRosters: RawTeam[],\n  lastSeasonRaters: RatedRawPlayer[],\n  currentRaters: RatedRawPlayer[]\n): Team[] => {\n  console.log(\n    `🔄 Processing ${newRosters.length} new rosters against ${previousRosters.length} previous rosters`\n  );\n  const outputRosters: Team[] = [];\n\n  const playersByPlayerId: Map<number, Player> = new Map();\n\n  newRosters.forEach((newTeam) => {\n    console.log(`🏀 Processing team ${newTeam.id}:`, {\n      hasRoster: !!newTeam.roster,\n      hasEntries: !!newTeam.roster?.entries,\n      entriesLength: newTeam.roster?.entries?.length || 0,\n    });\n\n    const newRoster = newTeam.roster.entries;\n    const oldTeam: Team | undefined = previousRosters.find(\n      (team) => team.id === newTeam.id\n    );\n    if (!oldTeam) {\n      console.warn(`⚠️ No matching previous team found for team ${newTeam.id}`);\n      return;\n    }\n\n    console.log(`📊 Team ${newTeam.id} (${oldTeam.name}):`, {\n      newRosterSize: newRoster?.length || 0,\n      oldRosterSize: oldTeam.roster?.length || 0,\n      oldTeamPlayers:\n        oldTeam.roster?.map((p) => ({ id: p.id, name: p.fullName })) || [],\n    });\n\n    const rosterToBuild: Player[] = [];\n\n    newRoster.forEach((newPlayer) => {\n      console.log(`👤 Processing player ${newPlayer.playerId}:`, {\n        fullName: newPlayer.playerPoolEntry?.player?.fullName,\n        acquisitionType: newPlayer.acquisitionType,\n        isInOldTeam: oldTeam.roster.some(\n          (oldPlayer) => oldPlayer.id === newPlayer.playerId\n        ),\n      });\n\n      const currentRater = currentRaters.find(\n        (ratedPlayer) => ratedPlayer.id === newPlayer.playerId\n      );\n\n      const gamesPlayed =\n        newPlayer.playerPoolEntry.player.stats.find(\n          (statsEntry) => statsEntry.id === \"002025\"\n        )?.stats[42] ?? 0;\n      const rawStats = newPlayer.playerPoolEntry.player.stats.find(\n        (statsEntry) => statsEntry.id === \"002025\"\n      )?.stats;\n\n      const isPlayerInOldTeam = oldTeam.roster.some(\n        (oldPlayer) => oldPlayer.id === newPlayer.playerId\n      );\n\n      if (!isPlayerInOldTeam) {\n        console.log(\n          `🆕 New player ${newPlayer.playerId} (${newPlayer.playerPoolEntry?.player?.fullName}) - acquisition type: ${newPlayer.acquisitionType}`\n        );\n\n        if (newPlayer.acquisitionType === AcquisitionTypeEnum.ADD) {\n          console.log(\n            `➕ Adding as free agent: ${newPlayer.playerPoolEntry?.player?.fullName}`\n          );\n          addFreeAgent(\n            newPlayer,\n            lastSeasonRaters,\n            rosterToBuild,\n            currentRater?.ratings[0],\n            gamesPlayed,\n            rawStats\n          );\n        } else if (newPlayer.acquisitionType === AcquisitionTypeEnum.TRADE) {\n          console.log(\n            `↔️ Adding as traded player: ${newPlayer.playerPoolEntry?.player?.fullName}`\n          );\n          addTradedPlayer(\n            newPlayer,\n            playersByPlayerId,\n            previousRosters,\n            rosterToBuild,\n            lastSeasonRaters,\n            currentRater?.ratings[0],\n            gamesPlayed,\n            rawStats\n          );\n        } else if (newPlayer.acquisitionType === AcquisitionTypeEnum.DRAFT) {\n          console.log(\n            `🎯 Adding drafted player: ${newPlayer.playerPoolEntry?.player?.fullName}`\n          );\n          addFreeAgent(\n            newPlayer,\n            lastSeasonRaters,\n            rosterToBuild,\n            currentRater?.ratings[0],\n            gamesPlayed,\n            rawStats\n          );\n        } else {\n          console.log(\n            `❓ Unknown acquisition type for ${newPlayer.playerPoolEntry?.player?.fullName}: ${newPlayer.acquisitionType}`\n          );\n        }\n      } else {\n        console.log(\n          `♻️ Existing keeper: ${newPlayer.playerPoolEntry?.player?.fullName}`\n        );\n        const previousPlayer = oldTeam.roster.find(\n          (oldPlayer) => oldPlayer.id === newPlayer.playerId\n        );\n        if (previousPlayer) {\n          const previousRaters = lastSeasonRaters.find(\n            (ratedPlayer) => ratedPlayer.id === previousPlayer.id\n          )?.ratings[\"0\"];\n          rosterToBuild.push({\n            ...previousPlayer,\n            injuredSpot: newPlayer.lineupSlotId === 13,\n            currentRater: currentRater?.ratings[0].totalRating ?? 0,\n            gamesPlayed,\n            categoriesRaters: buildPlayerRaters(currentRater?.ratings[0]),\n            previousCategoriesRaters: buildPlayerRaters(previousRaters),\n            detailedStats: buildPlayerStats(rawStats),\n          });\n        }\n      }\n    });\n    console.log(\n      `✅ Team ${newTeam.id} final roster: ${rosterToBuild.length} players`\n    );\n    outputRosters.push({ ...oldTeam, roster: rosterToBuild });\n  });\n\n  console.log(`🎯 Final output: ${outputRosters.length} teams processed`);\n  return outputRosters.sort((a, b) => {\n    return a.name.localeCompare(b.name);\n  });\n};\n\nexport const checkUnpickablePlayersStatus = async (\n  players: UnpickablePlayer[]\n) => {\n  console.log(`🏥 Checking status of ${players.length} unpickable players...`);\n  let outputPlayers = [...players];\n  const url = `https://lm-api-reads.fantasy.espn.com/apis/v3/games/fba/seasons/2025/segments/0/leagues/3409?scoringPeriodId=12&view=kona_playercard`;\n\n  for (const player of outputPlayers) {\n    if (player.outForSeason) {\n      console.log(`⏭️ Skipping ${player.name} (out for season)`);\n      continue;\n    }\n\n    console.log(\n      `🔍 Checking injury status for ${player.name} (ID: ${player.id})`\n    );\n    const checkStartTime = Date.now();\n\n    const ratersHeaders = {\n      \"X-Fantasy-Filter\": {\n        players: {\n          filterIds: { value: [player.id] },\n          filterStatsForTopScoringPeriodIds: {\n            value: 82,\n            additionalValue: [\n              \"002025\",\n              \"102025\",\n              \"002024\",\n              \"012025\",\n              \"022025\",\n              \"032025\",\n              \"042025\",\n            ],\n          },\n        },\n      },\n    };\n    const req = new Request(url);\n    req.headers.set(\n      \"X-Fantasy-Filter\",\n      JSON.stringify(ratersHeaders[\"X-Fantasy-Filter\"])\n    );\n\n    await fetch(req)\n      .then((response) => {\n        console.log(\n          `✅ Player ${player.name} response (${\n            Date.now() - checkStartTime\n          }ms):`,\n          response.status,\n          response.statusText\n        );\n        return response.json();\n      })\n      .then((json: { players: RatedRawPlayer[] }) => {\n        if (!json.players[0].player.injured) {\n          console.log(\n            `🎉 ${player.name} is no longer injured - removing from unpickable list`\n          );\n          outputPlayers = outputPlayers.filter(\n            (injuredPlayer) => injuredPlayer.id !== player.id\n          );\n        } else {\n          console.log(`🏥 ${player.name} is still injured`);\n        }\n      })\n      .catch((error) => {\n        console.error(`❌ Failed to check ${player.name}:`, error);\n        console.error(\"🔍 Error details:\", {\n          message: error.message,\n          stack: error.stack,\n          playerId: player.id,\n          playerName: player.name,\n        });\n      });\n  }\n\n  console.log(\n    `✅ Unpickable players check completed - ${outputPlayers.length} players remaining`\n  );\n  return outputPlayers.sort((a, b) => {\n    return a.name.localeCompare(b.name);\n  });\n};\n\nconst buildSeasonRankingPoint = (ranking: number) => {\n  let rankingPoints = 15 - ranking;\n  if (ranking < 4) {\n    rankingPoints += 3;\n  }\n  if (ranking === 1) {\n    rankingPoints += 5;\n  }\n  return rankingPoints;\n};\n\nconst historyUsersMap = new Map([\n  [\"{D4FECFB1-F07A-4F75-BECF-B1F07A3F7549}\", \"Captain Teemo\"],\n  [\"{5C013B45-8513-47C4-81B5-26066376781B}\", \"BK\"],\n  [\"{04294649-19F7-4D19-BADC-920F4DF3C3B5}\", \"RBC\"],\n  [\"{30DF025F-A7EE-43D4-9F02-5FA7EED3D475}\", \"Jumping Othello\"],\n  [\"{24C076F8-363B-45DF-8076-F8363B85DF78}\", \"Piebar\"],\n  [\"{EC71D7EF-A963-4FEB-982D-792C3546A88C}\", \"PacificBeardMan\"],\n  [\"{38F0AA49-CFB8-4C73-B0AA-49CFB8DC733F}\", \"gpolin\"],\n  [\"{3BA10345-1472-40B5-A103-45147230B51F}\", \"Nemausus\"],\n  [\"{9E7C628C-D9AE-4B1D-BC62-8CD9AEBB1D6A}\", \"Hans Gruber\"],\n  [\"{7CF55C66-844A-4428-B55C-66844A542839}\", \"Power RennesGers\"],\n  [\"{5D7F50B5-D1B9-4E2E-BF50-B5D1B9EE2E52}\", \"Kevince Carter\"],\n  [\"{6A45E5C1-C0CA-4105-BBF2-C62A10D33D3D}\", \"Recto\"],\n  [\"{4694F412-284D-44D1-B6BB-3BF0660197DB}\", \"Laow\"],\n  [\"{1961241D-50EC-464F-A124-1D50EC864F65}\", \"Gotham Ballers\"],\n  [\"{4C49A5AB-4A6E-47BC-AFD2-627657AE2BF3}\", \"Lagiggz\"],\n  [\"{E2E54577-06C7-4092-8049-DE0F0FFA8151}\", \"Yohann\"],\n  [\"{C64D0C89-0439-4251-BADE-811DEA058414}\", \"Slamdunk\"],\n  [\"{F68FE751-C8C6-4B24-B062-8AE15738F52E}\", \"Taggart BC\"],\n  [\"{474A5D21-8C15-4640-9860-3934F2E7DD76}\", \"Toronto Dutchie\"],\n  [\"{27C3600E-723C-495F-8360-0E723C695F07}\", \"Buster Keaton\"],\n  [\"{FA794109-3032-415A-91F9-7ADD0680175A}\", \"Makun\"],\n  [\"{90996E98-4623-4E68-9AFE-EE2CDB96841E}\", \"OJ Mayo\"],\n  [\"{DF803A2C-833A-4749-B635-0FAFDEC2AB79}\", \"Straka\"],\n  [\"{C8B88300-53A5-4E37-B01C-0A4953EA5852}\", \"Evgeni Flowsky\"],\n  [\"{B20FF95F-6C77-465C-801E-948B93D5DD53}\", \"Alcuin\"],\n  [\"{1AD77E1C-58E5-42B1-9B82-A909162D7193}\", \"Real Mateus\"],\n  [\"{7DB34B70-7989-4236-BB39-17513B492270}\", \"Phoenix\"],\n  [\"{479E4B9D-C9CC-4E83-882D-40FB9C400D85}\", \"Eagle Warriors\"],\n  [\"{06BBF389-1B6C-44FD-99D5-53B74C478194}\", \"Dkeuss\"],\n  [\"{B9BDB736-3D7C-47F7-B833-075FCBE7FA08}\", \"Coyen\"],\n  [\"{4F6331EB-6FAE-4C6C-9C41-BD3E20AE5F74}\", \"Barbenoir\"],\n  [\"{759DE964-CA02-4EE7-ACFD-62EE77A059B1}\", \"Grand Tatou\"],\n]);\n\nexport const buildHistoryMap = () => {\n  const historyByOwnerId = new Map<string, HistoryRanking>();\n  historyData.forEach((season) => {\n    season.teams.forEach((team) => {\n      team.owners.forEach((owner) => {\n        if (historyUsersMap.has(owner)) {\n          let data = historyByOwnerId.get(owner);\n          const seasonPoints = buildSeasonRankingPoint(\n            team.rankCalculatedFinal\n          );\n          if (data) {\n            data.seasonsRankings.push({\n              season: season.seasonId,\n              ranking: team.rankCalculatedFinal,\n              teamName: team.name,\n              points: seasonPoints,\n            });\n            data.totalPoints += seasonPoints;\n          } else {\n            data = {\n              ownerName: historyUsersMap.get(owner) ?? \"\",\n              totalPoints: seasonPoints,\n              seasonsRankings: [\n                {\n                  season: season.seasonId,\n                  ranking: team.rankCalculatedFinal,\n                  teamName: team.name,\n                  points: buildSeasonRankingPoint(team.rankCalculatedFinal),\n                },\n              ],\n            };\n          }\n          historyByOwnerId.set(owner, data);\n        }\n      });\n    });\n  });\n  return historyByOwnerId;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1062, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/scripts/dailyUpdate.ts"],"sourcesContent":["import { addNewPlayers, checkUnpickablePlayersStatus } from \"../utils/data\";\nimport {\n  RatedRawPlayer,\n  RawTeam,\n  Team,\n  UnpickablePlayer,\n} from \"../utils/types\";\nimport { downloadElement } from \"../utils/utils\";\nimport { Dispatch, SetStateAction } from \"react\";\n\n// Server-side version that loads rosters from API\nconst loadRostersData = async () => {\n  if (typeof window === \"undefined\") {\n    // Server-side: import directly\n    const rosters = await import(\"../assets/teams/rosters.json\");\n    const rater2024 = await import(\"../assets/rater/rater2024.json\");\n    return {\n      rosters: rosters.default,\n      rater2024: rater2024.default,\n    };\n  } else {\n    // Client-side: fetch from API\n    const response = await fetch(\"/api/rosters\");\n    const rosters = await response.json();\n    const rater2024Response = await fetch(\"/api/rater/2024\");\n    const rater2024 = await rater2024Response.json();\n    return { rosters, rater2024 };\n  }\n};\n\nconst raterUrl =\n  \"https://lm-api-reads.fantasy.espn.com/apis/v3/games/fba/seasons/2025/segments/0/leagues/3409?scoringPeriodId=7&view=kona_player_info&view=mStatRatings\";\n\nexport async function dailyUpdate(\n  setIsUpdating: Dispatch<SetStateAction<boolean>>,\n  handleDataRefresh?: (\n    newTeams: Team[],\n    newUnpickables: UnpickablePlayer[],\n    newUpdate: Date\n  ) => void\n) {\n  setIsUpdating(true);\n  console.log(\"🚀 Starting daily update...\");\n\n  const { rosters, rater2024 } = await loadRostersData();\n\n  const newRosters: RawTeam[] = [];\n  let newRaters: RatedRawPlayer[] = [];\n\n  const ratersHeaders = {\n    \"X-Fantasy-Filter\": {\n      players: {\n        filterSlotIds: { value: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] },\n        limit: 750,\n        offset: 0,\n        sortRating: {\n          additionalValue: null,\n          sortAsc: false,\n          sortPriority: 1,\n          value: 0,\n        },\n        filterRanksForScoringPeriodIds: { value: [7] },\n        filterRanksForRankTypes: { value: [\"STANDARD\"] },\n        filterStatsForTopScoringPeriodIds: {\n          value: 5,\n          additionalValue: [\n            \"002025\",\n            \"102025\",\n            \"002024\",\n            \"012025\",\n            \"022025\",\n            \"032025\",\n            \"042025\",\n          ],\n        },\n      },\n    },\n  };\n\n  console.log(\"📊 Fetching rater data from:\", raterUrl);\n  const raterStartTime = Date.now();\n\n  const req = new Request(raterUrl);\n  req.headers.set(\n    \"X-Fantasy-Filter\",\n    JSON.stringify(ratersHeaders[\"X-Fantasy-Filter\"])\n  );\n\n  console.log(\"📋 Rater request headers:\", req.headers.get(\"X-Fantasy-Filter\"));\n\n  await fetch(req)\n    .then((response) => {\n      console.log(\n        `✅ Rater response received (${Date.now() - raterStartTime}ms):`,\n        response.status,\n        response.statusText\n      );\n      return response.json();\n    })\n    .then((json: { players: RatedRawPlayer[] }) => {\n      newRaters = [...json.players];\n      console.log(`📈 Retrieved ${newRaters.length} rater entries`);\n    })\n    .catch((error) => {\n      console.error(\"❌ Rater fetch failed:\", error);\n      console.error(\"🔍 Error details:\", {\n        message: error.message,\n        stack: error.stack,\n        url: raterUrl,\n      });\n    });\n\n  console.log(\"🏀 Starting team rosters fetch...\");\n  for (let i = 1; i < 17; i++) {\n    const url = `https://lm-api-reads.fantasy.espn.com/apis/v3/games/fba/seasons/2026/segments/0/leagues/3409?rosterForTeamId=${i}&view=mRoster`;\n    console.log(`📥 Fetching team ${i} roster...`);\n    const teamStartTime = Date.now();\n\n    await fetch(url)\n      .then((response) => {\n        console.log(\n          `✅ Team ${i} response (${Date.now() - teamStartTime}ms):`,\n          response.status,\n          response.statusText\n        );\n        return response.json();\n      })\n      .then((json: { teams: RawTeam[] }) => {\n        console.log(`🔍 Team ${i} API response structure:`, {\n          hasTeams: !!json.teams,\n          teamsLength: json.teams?.length || 0,\n          teamIds: json.teams?.map((t) => t.id) || [],\n          fullResponse: json,\n        });\n\n        const teamRoster = json.teams.find((team) => team.id === i);\n        if (teamRoster) {\n          console.log(`📊 Team ${i} details:`, {\n            id: teamRoster.id,\n            hasRoster: !!teamRoster.roster,\n            entriesCount: teamRoster.roster?.entries?.length || 0,\n            rosterStructure: teamRoster.roster,\n          });\n          newRosters.push(teamRoster);\n          console.log(\n            `📋 Team ${i} roster added (${\n              teamRoster.roster?.entries?.length || 0\n            } players)`\n          );\n        } else {\n          console.warn(`⚠️ Team ${i} not found in response`);\n          console.log(\n            `🔍 Available teams in response:`,\n            json.teams?.map((t) => ({ id: t.id, name: t.name }))\n          );\n        }\n      })\n      .catch((error) => {\n        console.error(`❌ Team ${i} fetch failed:`, error);\n        console.error(\"🔍 Error details:\", {\n          message: error.message,\n          stack: error.stack,\n          url: url,\n          teamId: i,\n        });\n      });\n  }\n\n  console.log(`📊 Processing data - ${newRosters.length} teams fetched`);\n  console.log(\n    `🔍 Team IDs successfully fetched:`,\n    newRosters.map((team) => team.id)\n  );\n\n  const ratedPlayers = rater2024 as unknown as RatedRawPlayer[];\n\n  const outputRosters = addNewPlayers(\n    rosters.teams,\n    newRosters,\n    ratedPlayers,\n    newRaters\n  );\n\n  console.log(\"🔄 Checking unpickable players status...\");\n  const unpickablePlayers = await checkUnpickablePlayersStatus(\n    rosters.unpickablePlayers\n  );\n  console.log(`📋 ${unpickablePlayers.length} unpickable players after check`);\n\n  const output = {\n    lastUpdate: new Date(),\n    teams: outputRosters,\n    unpickablePlayers,\n  };\n  if (handleDataRefresh) {\n    handleDataRefresh(outputRosters, unpickablePlayers, output.lastUpdate);\n    return;\n  }\n  downloadElement(output, \"rosters\", setIsUpdating);\n  console.log(\"✅ Daily update completed successfully\");\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1227, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/Footer.tsx"],"sourcesContent":["\"use client\";\n\nimport { CSSProperties, ReactElement, useContext } from \"react\";\nimport { createStyles } from \"../utils/style\";\nimport { DataContext } from \"../context/DataContext\";\nimport { NavButton } from \"./NavButton\";\nimport AutorenewIcon from \"@mui/icons-material/Autorenew\";\nimport SystemUpdateAltIcon from \"@mui/icons-material/SystemUpdateAlt\";\nimport { dailyUpdate } from \"../scripts/dailyUpdate\";\n\nexport const Footer = (): ReactElement => {\n  const { lastUpdate, handleDataRefresh, setIsUpdating } =\n    useContext(DataContext);\n  const isLocal = location.hostname === \"localhost\";\n\n  const styles = createStyles<CSSProperties>()({\n    footer: {\n      display: \"flex\",\n      flexFlow: \"row nowrap\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      marginTop: \"1rem\",\n      width: \"100%\",\n      fontSize: \"0.75rem\",\n    },\n    updateContainer: {\n      display: \"flex\",\n      flexFlow: \"row nowrap\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      gap: \"1rem\",\n    },\n  });\n\n  return (\n    <footer style={styles.footer}>\n      {isLocal && (\n        <NavButton\n          buttonIcon={SystemUpdateAltIcon}\n          onClickButton={() => dailyUpdate(setIsUpdating)}\n        />\n      )}\n      <a href=\"https://fantasy.espn.com/basketball/league?leagueId=3409\">\n        Fantasy league BBF\n      </a>\n      <article style={styles.updateContainer}>\n        <p>Mise à jour des données : {lastUpdate.toLocaleString()}</p>\n        <NavButton\n          buttonIcon={AutorenewIcon}\n          onClickButton={() => dailyUpdate(setIsUpdating, handleDataRefresh)}\n        />\n      </article>\n    </footer>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;;;;;;;;;AAUO,MAAM,SAAS;IACpB,MAAM,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GACpD,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,8HAAA,CAAA,cAAW;IACxB,MAAM,UAAU,SAAS,QAAQ,KAAK;IAEtC,MAAM,SAAS,CAAA,GAAA,qHAAA,CAAA,eAAY,AAAD,IAAmB;QAC3C,QAAQ;YACN,SAAS;YACT,UAAU;YACV,gBAAgB;YAChB,YAAY;YACZ,WAAW;YACX,OAAO;YACP,UAAU;QACZ;QACA,iBAAiB;YACf,SAAS;YACT,UAAU;YACV,gBAAgB;YAChB,YAAY;YACZ,KAAK;QACP;IACF;IAEA,qBACE,8OAAC;QAAO,OAAO,OAAO,MAAM;;YACzB,yBACC,8OAAC,+HAAA,CAAA,YAAS;gBACR,YAAY,oKAAA,CAAA,UAAmB;gBAC/B,eAAe,IAAM,CAAA,GAAA,6HAAA,CAAA,cAAW,AAAD,EAAE;;;;;;0BAGrC,8OAAC;gBAAE,MAAK;0BAA2D;;;;;;0BAGnE,8OAAC;gBAAQ,OAAO,OAAO,eAAe;;kCACpC,8OAAC;;4BAAE;4BAA2B,WAAW,cAAc;;;;;;;kCACvD,8OAAC,+HAAA,CAAA,YAAS;wBACR,YAAY,8JAAA,CAAA,UAAa;wBACzB,eAAe,IAAM,CAAA,GAAA,6HAAA,CAAA,cAAW,AAAD,EAAE,eAAe;;;;;;;;;;;;;;;;;;AAK1D","debugId":null}},
    {"offset": {"line": 1325, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/generic/CustomLoader.tsx"],"sourcesContent":["import { CSSProperties } from \"react\";\nimport { createStyles, rootColors } from \"../../utils/style\";\nimport \"./customLoader.css\";\n\nexport const CustomLoader = () => {\n  const styles = createStyles<CSSProperties>()({\n    container: {\n      width: \"100%\",\n      padding: \"1rem\",\n      display: \"flex\",\n      flexFlow: \"column nowrap\",\n      alignItems: \"center\",\n      gap: \"3rem\",\n    },\n    progressContainer: {\n      width: \"100%\",\n      height: \"2rem\",\n      backgroundColor: rootColors.fontColor,\n    },\n    progressBar: {\n      height: \"2rem\",\n      width: \"0%\",\n      background: rootColors.primary,\n      animation: \"progress 20s 1 linear\",\n    },\n  });\n  return (\n    <article style={styles.container}>\n      <div style={styles.progressContainer}>\n        <div style={styles.progressBar} />\n      </div>\n    </article>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;;;;AAGO,MAAM,eAAe;IAC1B,MAAM,SAAS,CAAA,GAAA,qHAAA,CAAA,eAAY,AAAD,IAAmB;QAC3C,WAAW;YACT,OAAO;YACP,SAAS;YACT,SAAS;YACT,UAAU;YACV,YAAY;YACZ,KAAK;QACP;QACA,mBAAmB;YACjB,OAAO;YACP,QAAQ;YACR,iBAAiB,qHAAA,CAAA,aAAU,CAAC,SAAS;QACvC;QACA,aAAa;YACX,QAAQ;YACR,OAAO;YACP,YAAY,qHAAA,CAAA,aAAU,CAAC,OAAO;YAC9B,WAAW;QACb;IACF;IACA,qBACE,8OAAC;QAAQ,OAAO,OAAO,SAAS;kBAC9B,cAAA,8OAAC;YAAI,OAAO,OAAO,iBAAiB;sBAClC,cAAA,8OAAC;gBAAI,OAAO,OAAO,WAAW;;;;;;;;;;;;;;;;AAItC","debugId":null}},
    {"offset": {"line": 1381, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/Updater.tsx"],"sourcesContent":["\"use client\";\n\nimport { CSSProperties, useContext } from \"react\";\nimport { DataContext } from \"../context/DataContext\";\nimport { createStyles, rootColors } from \"../utils/style\";\nimport { CustomLoader } from \"./generic/CustomLoader\";\n\nexport const Updater = () => {\n  const styles = createStyles<CSSProperties>()({\n    container: {\n      position: \"fixed\",\n      bottom: 0,\n      left: 0,\n      width: \"100vw\",\n      display: \"flex\",\n      flexFlow: \"column nowrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      padding: \"3rem\",\n      zIndex: 100,\n      backgroundColor: \"#ffeede6b\",\n    },\n    textBox: {\n      padding: \"1rem\",\n      borderRadius: \"0.75rem\",\n      backgroundColor: rootColors.fontColor,\n      color: rootColors.background,\n    },\n  });\n  const { isUpdating } = useContext(DataContext);\n  if (isUpdating) {\n    return (\n      <section style={styles.container}>\n        <article style={styles.textBox}>\n          <p>Mise à jour en cours</p>\n        </article>\n        <CustomLoader />\n      </section>\n    );\n  }\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOO,MAAM,UAAU;IACrB,MAAM,SAAS,CAAA,GAAA,qHAAA,CAAA,eAAY,AAAD,IAAmB;QAC3C,WAAW;YACT,UAAU;YACV,QAAQ;YACR,MAAM;YACN,OAAO;YACP,SAAS;YACT,UAAU;YACV,gBAAgB;YAChB,YAAY;YACZ,SAAS;YACT,QAAQ;YACR,iBAAiB;QACnB;QACA,SAAS;YACP,SAAS;YACT,cAAc;YACd,iBAAiB,qHAAA,CAAA,aAAU,CAAC,SAAS;YACrC,OAAO,qHAAA,CAAA,aAAU,CAAC,UAAU;QAC9B;IACF;IACA,MAAM,EAAE,UAAU,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,8HAAA,CAAA,cAAW;IAC7C,IAAI,YAAY;QACd,qBACE,8OAAC;YAAQ,OAAO,OAAO,SAAS;;8BAC9B,8OAAC;oBAAQ,OAAO,OAAO,OAAO;8BAC5B,cAAA,8OAAC;kCAAE;;;;;;;;;;;8BAEL,8OAAC,6IAAA,CAAA,eAAY;;;;;;;;;;;IAGnB;AACF","debugId":null}}]
}