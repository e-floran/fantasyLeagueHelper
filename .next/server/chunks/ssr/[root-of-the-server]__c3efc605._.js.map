{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/generic/CustomButton.tsx"],"sourcesContent":["import { CSSProperties } from \"react\";\nimport { createStyles } from \"../../utils/style\";\nimport { merge } from \"lodash\";\n\ninterface ButtonProps {\n  buttonText: string;\n  isDisabled?: boolean;\n  onClickButton: () => void;\n  customStyle?: CSSProperties;\n}\nexport const CustomButton = ({\n  buttonText,\n  isDisabled,\n  onClickButton,\n  customStyle,\n}: ButtonProps) => {\n  const styles = createStyles<CSSProperties>()({\n    button: {\n      borderRadius: \"0.75rem\",\n      border: \"1px solid transparent\",\n      padding: \"0.5rem 1rem\",\n      fontSize: \"1rem\",\n      fontWeight: 500,\n      fontFamily: \"inherit\",\n      cursor: \"pointer\",\n      maxWidth: \"15rem\",\n      maxHeight: \"2.5rem\",\n      lineBreak: \"auto\",\n      whiteSpace: \"nowrap\",\n      transition: \"all 0.5s\",\n    },\n  });\n\n  const mergedStyle = customStyle\n    ? merge(styles.button, customStyle)\n    : styles.button;\n\n  return (\n    <button style={mergedStyle} disabled={isDisabled} onClick={onClickButton}>\n      {buttonText}\n    </button>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAQO,MAAM,eAAe,CAAC,EAC3B,UAAU,EACV,UAAU,EACV,aAAa,EACb,WAAW,EACC;IACZ,MAAM,SAAS,CAAA,GAAA,qHAAA,CAAA,eAAY,AAAD,IAAmB;QAC3C,QAAQ;YACN,cAAc;YACd,QAAQ;YACR,SAAS;YACT,UAAU;YACV,YAAY;YACZ,YAAY;YACZ,QAAQ;YACR,UAAU;YACV,WAAW;YACX,WAAW;YACX,YAAY;YACZ,YAAY;QACd;IACF;IAEA,MAAM,cAAc,cAChB,CAAA,GAAA,+HAAA,CAAA,UAAK,AAAD,EAAE,OAAO,MAAM,EAAE,eACrB,OAAO,MAAM;IAEjB,qBACE,8OAAC;QAAO,OAAO;QAAa,UAAU;QAAY,SAAS;kBACxD;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 56, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/teamDetails/ButtonsGroup.tsx"],"sourcesContent":["import { CSSProperties, ReactElement, useContext, useMemo } from \"react\";\nimport { createStyles } from \"../../utils/style\";\nimport { CustomButton } from \"../generic/CustomButton\";\nimport { DataContext } from \"../../context/DataContext\";\n\nexport const ButtonsGroup = (): ReactElement => {\n  const { activeTeamId, setActiveTeamId, setSelectedKeepers, dataByTeamId } =\n    useContext(DataContext);\n  const styles = createStyles<CSSProperties>()({\n    buttonsGroup: {\n      display: \"flex\",\n      flexFlow: \"row wrap\",\n      justifyContent: \"space-between\",\n      alignItems: \"start\",\n      gap: \"0.5rem\",\n    },\n    h2: {\n      width: \"100%\",\n    },\n    button: {\n      width: \"45%\",\n    },\n  });\n\n  const teamsIds = useMemo(() => {\n    const ids = Array.from(dataByTeamId.keys());\n    return ids;\n  }, [dataByTeamId]);\n\n  const buttons = useMemo(() => {\n    const buttonsArray: ReactElement[] = [];\n    teamsIds.forEach((teamId) => {\n      const team = dataByTeamId.get(teamId)?.team;\n      if (!team) {\n        return;\n      }\n      buttonsArray.push(\n        <CustomButton\n          key={team.id}\n          buttonText={team.name}\n          isDisabled={activeTeamId === team.id}\n          onClickButton={() => {\n            setActiveTeamId(team.id);\n            setSelectedKeepers([]);\n          }}\n          customStyle={styles.button}\n        />\n      );\n    });\n    return buttonsArray;\n  }, [\n    activeTeamId,\n    dataByTeamId,\n    setActiveTeamId,\n    setSelectedKeepers,\n    styles.button,\n    teamsIds,\n  ]);\n\n  return (\n    <section style={styles.buttonsGroup}>\n      <h2 style={styles.h2}>Effectif</h2>\n      {buttons}\n    </section>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;AAEO,MAAM,eAAe;IAC1B,MAAM,EAAE,YAAY,EAAE,eAAe,EAAE,kBAAkB,EAAE,YAAY,EAAE,GACvE,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,8HAAA,CAAA,cAAW;IACxB,MAAM,SAAS,CAAA,GAAA,qHAAA,CAAA,eAAY,AAAD,IAAmB;QAC3C,cAAc;YACZ,SAAS;YACT,UAAU;YACV,gBAAgB;YAChB,YAAY;YACZ,KAAK;QACP;QACA,IAAI;YACF,OAAO;QACT;QACA,QAAQ;YACN,OAAO;QACT;IACF;IAEA,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACvB,MAAM,MAAM,MAAM,IAAI,CAAC,aAAa,IAAI;QACxC,OAAO;IACT,GAAG;QAAC;KAAa;IAEjB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACtB,MAAM,eAA+B,EAAE;QACvC,SAAS,OAAO,CAAC,CAAC;YAChB,MAAM,OAAO,aAAa,GAAG,CAAC,SAAS;YACvC,IAAI,CAAC,MAAM;gBACT;YACF;YACA,aAAa,IAAI,eACf,8OAAC,6IAAA,CAAA,eAAY;gBAEX,YAAY,KAAK,IAAI;gBACrB,YAAY,iBAAiB,KAAK,EAAE;gBACpC,eAAe;oBACb,gBAAgB,KAAK,EAAE;oBACvB,mBAAmB,EAAE;gBACvB;gBACA,aAAa,OAAO,MAAM;eAPrB,KAAK,EAAE;;;;;QAUlB;QACA,OAAO;IACT,GAAG;QACD;QACA;QACA;QACA;QACA,OAAO,MAAM;QACb;KACD;IAED,qBACE,8OAAC;QAAQ,OAAO,OAAO,YAAY;;0BACjC,8OAAC;gBAAG,OAAO,OAAO,EAAE;0BAAE;;;;;;YACrB;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/hooks/useSortColumns.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { PlayerWithAdvancedStats } from \"../components/advancedStats/AdvancedTable\";\nimport { PlayerWithProjection } from \"../components/teamDetails/RosterTable\";\nimport { TeamSortableData } from \"../components/teamsSummary/SummaryTable\";\n\nexport function useSortColumns<T>({ options }: { options: T[] }) {\n  const [sortOrder, setSortOrder] = useState(\"desc\");\n  const [columnIcon, setColumnIcon] = useState(\"\");\n  const [sortColumn, setSortColumn] = useState<\n    | keyof PlayerWithAdvancedStats\n    | keyof PlayerWithProjection\n    | keyof TeamSortableData\n  >(\"fullName\");\n  const [sortedOptions, setSortedOptions] = useState<T[]>(options);\n\n  const toggleSortOrder = () => {\n    setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n    setColumnIcon(columnIcon === \"↓\" ? \"↑\" : \"↓\");\n  };\n\n  const sortColumnByArgument = (column: keyof T) => {\n    toggleSortOrder();\n    setSortColumn(\n      column as\n        | keyof PlayerWithAdvancedStats\n        | keyof PlayerWithProjection\n        | keyof TeamSortableData\n    );\n    const sortedOptionsList = [...(options ?? [])].sort((a, b) => {\n      if (typeof a[column] === \"string\" && typeof b[column] === \"string\") {\n        if (sortOrder === \"asc\") {\n          return a[column].localeCompare(b[column]);\n        } else {\n          return b[column].localeCompare(a[column]);\n        }\n      } else if (\n        typeof a[column] === \"number\" &&\n        typeof b[column] === \"number\"\n      ) {\n        if (sortOrder === \"asc\") {\n          return a[column] - b[column];\n        } else {\n          return b[column] - a[column];\n        }\n      } else if (Array.isArray(a[column]) && Array.isArray(b[column])) {\n        if (sortOrder === \"asc\") {\n          return a[column].length - b[column].length;\n        } else {\n          return b[column].length - a[column].length;\n        }\n      } else {\n        return 0;\n      }\n    });\n    setSortedOptions(sortedOptionsList);\n  };\n\n  useEffect(() => {\n    setSortColumn(\"fullName\");\n    setSortedOptions(options);\n  }, [options]);\n\n  return {\n    sortOrder,\n    setSortOrder,\n    columnIcon,\n    setColumnIcon,\n    sortColumn,\n    setSortColumn,\n    sortedOptions,\n    setSortedOptions,\n    toggleSortOrder,\n    sortColumnByArgument,\n  };\n}\n"],"names":[],"mappings":";;;AAAA;;AAKO,SAAS,eAAkB,EAAE,OAAO,EAAoB;IAC7D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAIzC;IACF,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAO;IAExD,MAAM,kBAAkB;QACtB,aAAa,cAAc,QAAQ,SAAS;QAC5C,cAAc,eAAe,MAAM,MAAM;IAC3C;IAEA,MAAM,uBAAuB,CAAC;QAC5B;QACA,cACE;QAKF,MAAM,oBAAoB;eAAK,WAAW,EAAE;SAAE,CAAC,IAAI,CAAC,CAAC,GAAG;YACtD,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,YAAY,OAAO,CAAC,CAAC,OAAO,KAAK,UAAU;gBAClE,IAAI,cAAc,OAAO;oBACvB,OAAO,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO;gBAC1C,OAAO;oBACL,OAAO,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO;gBAC1C;YACF,OAAO,IACL,OAAO,CAAC,CAAC,OAAO,KAAK,YACrB,OAAO,CAAC,CAAC,OAAO,KAAK,UACrB;gBACA,IAAI,cAAc,OAAO;oBACvB,OAAO,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO;gBAC9B,OAAO;oBACL,OAAO,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO;gBAC9B;YACF,OAAO,IAAI,MAAM,OAAO,CAAC,CAAC,CAAC,OAAO,KAAK,MAAM,OAAO,CAAC,CAAC,CAAC,OAAO,GAAG;gBAC/D,IAAI,cAAc,OAAO;oBACvB,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM;gBAC5C,OAAO;oBACL,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM;gBAC5C;YACF,OAAO;gBACL,OAAO;YACT;QACF;QACA,iBAAiB;IACnB;IAEA,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,cAAc;QACd,iBAAiB;IACnB,GAAG;QAAC;KAAQ;IAEZ,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/generic/CustomCheckbox.tsx"],"sourcesContent":["import { CSSProperties } from \"react\";\nimport { createStyles } from \"../../utils/style\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\n\ninterface CheckboxProps {\n  labelText?: string;\n  isChecked: boolean;\n  onChange: () => void;\n}\nexport const CustomCheckbox = ({\n  labelText,\n  isChecked,\n  onChange,\n}: CheckboxProps) => {\n  const styles = createStyles<CSSProperties>()({\n    label: {\n      display: \"block\",\n      cursor: \"pointer\",\n      userSelect: \"none\",\n      paddingLeft: labelText ? \"2rem\" : \"0\",\n      position: \"relative\",\n      overflow: \"hidden\",\n      minWidth: labelText ? \"4rem\" : \"0\",\n    },\n    checkbox: {\n      opacity: 0,\n      cursor: \"pointer\",\n      position: \"absolute\",\n    },\n    icon: {\n      position: labelText ? \"absolute\" : \"static\",\n      fontSize: \"1.25rem\",\n      left: 0,\n    },\n  });\n\n  return (\n    <label style={styles.label}>\n      <input\n        type=\"checkbox\"\n        checked={isChecked}\n        onChange={onChange}\n        style={styles.checkbox}\n      />\n      {isChecked ? (\n        <CheckBoxIcon style={styles.icon} />\n      ) : (\n        <CheckBoxOutlineBlankIcon style={styles.icon} />\n      )}\n      {labelText}\n    </label>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAOO,MAAM,iBAAiB,CAAC,EAC7B,SAAS,EACT,SAAS,EACT,QAAQ,EACM;IACd,MAAM,SAAS,CAAA,GAAA,qHAAA,CAAA,eAAY,AAAD,IAAmB;QAC3C,OAAO;YACL,SAAS;YACT,QAAQ;YACR,YAAY;YACZ,aAAa,YAAY,SAAS;YAClC,UAAU;YACV,UAAU;YACV,UAAU,YAAY,SAAS;QACjC;QACA,UAAU;YACR,SAAS;YACT,QAAQ;YACR,UAAU;QACZ;QACA,MAAM;YACJ,UAAU,YAAY,aAAa;YACnC,UAAU;YACV,MAAM;QACR;IACF;IAEA,qBACE,8OAAC;QAAM,OAAO,OAAO,KAAK;;0BACxB,8OAAC;gBACC,MAAK;gBACL,SAAS;gBACT,UAAU;gBACV,OAAO,OAAO,QAAQ;;;;;;YAEvB,0BACC,8OAAC,6JAAA,CAAA,UAAY;gBAAC,OAAO,OAAO,IAAI;;;;;yEAEhC,8OAAC,yKAAA,CAAA,UAAwB;gBAAC,OAAO,OAAO,IAAI;;;;;;YAE7C;;;;;;;AAGP","debugId":null}},
    {"offset": {"line": 283, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/teamDetails/RosterTable.tsx"],"sourcesContent":["import { CSSProperties, ReactElement, useContext, useMemo } from \"react\";\nimport { createStyles, rootColors } from \"../../utils/style\";\nimport { Player, TeamDetailsData } from \"../../utils/types\";\nimport { CustomButton } from \"../generic/CustomButton\";\nimport { useSortColumns } from \"../../hooks/useSortColumns\";\nimport { CustomCheckbox } from \"../generic/CustomCheckbox\";\nimport { DataContext } from \"../../context/DataContext\";\n\ninterface RosterTableProps {\n  activeTeamData: TeamDetailsData;\n}\n\nexport interface PlayerWithProjection extends Player {\n  projectedSalary: number;\n}\n\nexport const RosterTable = ({\n  activeTeamData,\n}: RosterTableProps): ReactElement => {\n  const { selectedKeepers, setSelectedKeepers } = useContext(DataContext);\n\n  const styles = createStyles<CSSProperties>()({\n    section: {\n      display: \"flex\",\n      flexFlow: \"column nowrap\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n    },\n    columnHeader: {\n      cursor: \"pointer\",\n    },\n    injuredPlayer: {\n      position: \"relative\",\n      top: \"0.25rem\",\n    },\n  });\n\n  const handleCheckboxClick = (playerId: number) => {\n    if (selectedKeepers.includes(playerId)) {\n      setSelectedKeepers((prev) => prev.filter((id) => id !== playerId));\n    } else if (selectedKeepers.length < 6) {\n      setSelectedKeepers((prev) => [...prev, playerId]);\n    }\n  };\n\n  const players = useMemo(() => {\n    const playersWithProjection: PlayerWithProjection[] =\n      activeTeamData.team.roster.map((player) => {\n        return {\n          ...player,\n          projectedSalary:\n            activeTeamData.newSalariesByPlayerId.get(player.id) || 0,\n        };\n      });\n    return playersWithProjection;\n  }, [activeTeamData.newSalariesByPlayerId, activeTeamData.team.roster]);\n\n  const { columnIcon, sortColumn, sortedOptions, sortColumnByArgument } =\n    useSortColumns({ options: players });\n\n  return (\n    <section style={styles.section}>\n      <table>\n        <thead>\n          <tr>\n            <th\n              style={styles.columnHeader}\n              onClick={() => sortColumnByArgument(\"fullName\")}\n            >\n              {\"Nom\"} {sortColumn === \"fullName\" ? columnIcon : null}\n            </th>\n            <th\n              style={styles.columnHeader}\n              onClick={() => sortColumnByArgument(\"previousRater\")}\n            >\n              {\"Rater 2024\"}{\" \"}\n              {sortColumn === \"previousRater\" ? columnIcon : null}\n            </th>\n            <th\n              style={styles.columnHeader}\n              onClick={() => sortColumnByArgument(\"currentRater\")}\n            >\n              {\"Rater 2025\"} {sortColumn === \"currentRater\" ? columnIcon : null}\n            </th>\n            <th\n              style={styles.columnHeader}\n              onClick={() => sortColumnByArgument(\"keeperHistory\")}\n            >\n              {\"Saisons keeper\"}\n              {sortColumn === \"keeperHistory\" ? columnIcon : null}\n            </th>\n            <th\n              style={styles.columnHeader}\n              onClick={() => sortColumnByArgument(\"salary\")}\n            >\n              Salaire {sortColumn === \"salary\" ? columnIcon : null}\n            </th>\n            <th\n              style={styles.columnHeader}\n              onClick={() => sortColumnByArgument(\"projectedSalary\")}\n            >\n              Saison prochaine{\" \"}\n              {sortColumn === \"projectedSalary\" ? columnIcon : null}\n            </th>\n            <th>Test keepers</th>\n          </tr>\n        </thead>\n        <tbody>\n          {sortedOptions.map((player) => {\n            return (\n              <tr\n                style={player.injuredSpot ? { color: \"red\" } : undefined}\n                key={player.id}\n              >\n                <td>{player.fullName}</td>\n                <td\n                  style={\n                    player.previousRater === 0\n                      ? { color: rootColors.primary }\n                      : undefined\n                  }\n                >\n                  {player.previousRater.toFixed(2)}\n                </td>\n                <td>{player.currentRater.toFixed(2)}</td>\n                <td>{player.keeperHistory.length}</td>\n                <td>{player.salary}</td>\n                <td>{activeTeamData?.newSalariesByPlayerId.get(player.id)}</td>\n                <td>\n                  <CustomCheckbox\n                    isChecked={selectedKeepers.includes(player.id)}\n                    onChange={() => handleCheckboxClick(player.id)}\n                  />\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td>Totaux</td>\n            <td>{activeTeamData?.totals?.rater2024.toFixed(2)}</td>\n            <td>{activeTeamData?.totals?.rater2025.toFixed(2)}</td>\n            <td>-</td>\n            <td>{activeTeamData?.totals?.currentSalary}</td>\n            <td>{activeTeamData?.totals?.projectedSalary}</td>\n            <td>{activeTeamData?.totals?.projectedKeepersSalaries}</td>\n          </tr>\n        </tfoot>\n      </table>\n      {!!selectedKeepers.length && (\n        <CustomButton\n          buttonText=\"Vider les keepers\"\n          onClickButton={() => setSelectedKeepers([])}\n        />\n      )}\n      <p>\n        Les joueurs dont le rater de la saison dernière est en orange n'ont pas\n        joué et n'auront donc pas d'évolution du salaire liée au rater.\n      </p>\n    </section>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 617, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/teamDetails/RosterStats.tsx"],"sourcesContent":["import { CSSProperties, useMemo } from \"react\";\nimport { TeamDetailsData } from \"../../utils/types\";\nimport { createStyles } from \"../../utils/style\";\n\nexport const RosterStats = ({\n  activeTeamData,\n}: {\n  activeTeamData: TeamDetailsData;\n}) => {\n  const styles = createStyles<CSSProperties>()({\n    section: {\n      display: \"flex\",\n      flexFlow: \"row wrap\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      width: \"100%\",\n      gap: \"0.5rem\",\n    },\n    article: {\n      display: \"flex\",\n      flexFlow: \"column nowrap\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      minWidth: \"4rem\",\n    },\n  });\n\n  const teamStats = useMemo(() => {\n    const stats = activeTeamData.totals.stats;\n    return {\n      FG: ((stats.FGM / stats.FGA) * 100).toFixed(2) + \"%\",\n      FT: ((stats.FTM / stats.FTA) * 100).toFixed(2) + \"%\",\n      \"3PM\": stats[\"3PM\"].toFixed(2),\n      REB: stats.REB.toFixed(2),\n      AST: stats.AST.toFixed(2),\n      STL: stats.STL.toFixed(2),\n      BLK: stats.BLK.toFixed(2),\n      TO: stats.TO.toFixed(2),\n      PTS: stats.PTS.toFixed(2),\n    };\n  }, [activeTeamData]);\n\n  return (\n    <section style={styles.section}>\n      <h2>Statistiques du roster actuel</h2>\n      {Object.entries(teamStats).map((stat, index) => {\n        return (\n          <article key={index} style={styles.article}>\n            <p>{stat[0]}</p>\n            <p>{stat[1]}</p>\n          </article>\n        );\n      })}\n    </section>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEO,MAAM,cAAc,CAAC,EAC1B,cAAc,EAGf;IACC,MAAM,SAAS,CAAA,GAAA,qHAAA,CAAA,eAAY,AAAD,IAAmB;QAC3C,SAAS;YACP,SAAS;YACT,UAAU;YACV,gBAAgB;YAChB,YAAY;YACZ,OAAO;YACP,KAAK;QACP;QACA,SAAS;YACP,SAAS;YACT,UAAU;YACV,gBAAgB;YAChB,YAAY;YACZ,UAAU;QACZ;IACF;IAEA,MAAM,YAAY,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QACxB,MAAM,QAAQ,eAAe,MAAM,CAAC,KAAK;QACzC,OAAO;YACL,IAAI,CAAC,AAAC,MAAM,GAAG,GAAG,MAAM,GAAG,GAAI,GAAG,EAAE,OAAO,CAAC,KAAK;YACjD,IAAI,CAAC,AAAC,MAAM,GAAG,GAAG,MAAM,GAAG,GAAI,GAAG,EAAE,OAAO,CAAC,KAAK;YACjD,OAAO,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC;YAC5B,KAAK,MAAM,GAAG,CAAC,OAAO,CAAC;YACvB,KAAK,MAAM,GAAG,CAAC,OAAO,CAAC;YACvB,KAAK,MAAM,GAAG,CAAC,OAAO,CAAC;YACvB,KAAK,MAAM,GAAG,CAAC,OAAO,CAAC;YACvB,IAAI,MAAM,EAAE,CAAC,OAAO,CAAC;YACrB,KAAK,MAAM,GAAG,CAAC,OAAO,CAAC;QACzB;IACF,GAAG;QAAC;KAAe;IAEnB,qBACE,8OAAC;QAAQ,OAAO,OAAO,OAAO;;0BAC5B,8OAAC;0BAAG;;;;;;YACH,OAAO,OAAO,CAAC,WAAW,GAAG,CAAC,CAAC,MAAM;gBACpC,qBACE,8OAAC;oBAAoB,OAAO,OAAO,OAAO;;sCACxC,8OAAC;sCAAG,IAAI,CAAC,EAAE;;;;;;sCACX,8OAAC;sCAAG,IAAI,CAAC,EAAE;;;;;;;mBAFC;;;;;YAKlB;;;;;;;AAGN","debugId":null}},
    {"offset": {"line": 706, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/pages/TeamDetails.tsx"],"sourcesContent":["import {\n  Dispatch,\n  ReactElement,\n  SetStateAction,\n  useContext,\n  useMemo,\n} from \"react\";\nimport { TeamDetailsData } from \"../utils/types\";\nimport { ButtonsGroup } from \"../components/teamDetails/ButtonsGroup\";\nimport { RosterTable } from \"../components/teamDetails/RosterTable\";\nimport { RosterStats } from \"../components/teamDetails/RosterStats\";\nimport { DataContext } from \"../context/DataContext\";\n\nexport interface DetailsProps {\n  selectedKeepers: number[];\n  setSelectedKeepers: Dispatch<SetStateAction<number[]>>;\n  activeTeamId: number;\n  setActiveTeamId: Dispatch<SetStateAction<number>>;\n  dataByTeamId: Map<number, TeamDetailsData>;\n}\n\nexport const TeamDetails = (): ReactElement => {\n  const { activeTeamId, dataByTeamId } = useContext(DataContext);\n  const activeTeamData = useMemo(() => {\n    return dataByTeamId.get(activeTeamId);\n  }, [activeTeamId, dataByTeamId]);\n\n  return (\n    <main>\n      <ButtonsGroup />\n      {activeTeamData && <RosterTable activeTeamData={activeTeamData} />}\n      {activeTeamData && <RosterStats activeTeamData={activeTeamData} />}\n    </main>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AAQA;AACA;AACA;AACA;;;;;;;AAUO,MAAM,cAAc;IACzB,MAAM,EAAE,YAAY,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE,8HAAA,CAAA,cAAW;IAC7D,MAAM,iBAAiB,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE;QAC7B,OAAO,aAAa,GAAG,CAAC;IAC1B,GAAG;QAAC;QAAc;KAAa;IAE/B,qBACE,8OAAC;;0BACC,8OAAC,iJAAA,CAAA,eAAY;;;;;YACZ,gCAAkB,8OAAC,gJAAA,CAAA,cAAW;gBAAC,gBAAgB;;;;;;YAC/C,gCAAkB,8OAAC,gJAAA,CAAA,cAAW;gBAAC,gBAAgB;;;;;;;;;;;;AAGtD","debugId":null}},
    {"offset": {"line": 761, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/app/page.tsx"],"sourcesContent":["import { TeamDetails } from \"../src/pages/TeamDetails\";\n\nexport default function HomePage() {\n  return <TeamDetails />;\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBAAO,8OAAC,4HAAA,CAAA,cAAW;;;;;AACrB","debugId":null}}]
}