{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/generic/CustomButton.tsx"],"sourcesContent":["import { CSSProperties } from \"react\";\nimport { createStyles } from \"../../utils/style\";\nimport { merge } from \"lodash\";\n\ninterface ButtonProps {\n  buttonText: string;\n  isDisabled?: boolean;\n  onClickButton: () => void;\n  customStyle?: CSSProperties;\n}\nexport const CustomButton = ({\n  buttonText,\n  isDisabled,\n  onClickButton,\n  customStyle,\n}: ButtonProps) => {\n  const styles = createStyles<CSSProperties>()({\n    button: {\n      borderRadius: \"0.75rem\",\n      border: \"1px solid transparent\",\n      padding: \"0.5rem 1rem\",\n      fontSize: \"1rem\",\n      fontWeight: 500,\n      fontFamily: \"inherit\",\n      cursor: \"pointer\",\n      maxWidth: \"15rem\",\n      maxHeight: \"2.5rem\",\n      lineBreak: \"auto\",\n      whiteSpace: \"nowrap\",\n      transition: \"all 0.5s\",\n    },\n  });\n\n  const mergedStyle = customStyle\n    ? merge(styles.button, customStyle)\n    : styles.button;\n\n  return (\n    <button style={mergedStyle} disabled={isDisabled} onClick={onClickButton}>\n      {buttonText}\n    </button>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;;;;AAQO,MAAM,eAAe;QAAC,EAC3B,UAAU,EACV,UAAU,EACV,aAAa,EACb,WAAW,EACC;IACZ,MAAM,SAAS,CAAA,GAAA,wHAAA,CAAA,eAAY,AAAD,IAAmB;QAC3C,QAAQ;YACN,cAAc;YACd,QAAQ;YACR,SAAS;YACT,UAAU;YACV,YAAY;YACZ,YAAY;YACZ,QAAQ;YACR,UAAU;YACV,WAAW;YACX,WAAW;YACX,YAAY;YACZ,YAAY;QACd;IACF;IAEA,MAAM,cAAc,cAChB,CAAA,GAAA,kIAAA,CAAA,UAAK,AAAD,EAAE,OAAO,MAAM,EAAE,eACrB,OAAO,MAAM;IAEjB,qBACE,6LAAC;QAAO,OAAO;QAAa,UAAU;QAAY,SAAS;kBACxD;;;;;;AAGP;KAhCa","debugId":null}},
    {"offset": {"line": 58, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/generic/CustomCheckbox.tsx"],"sourcesContent":["import { CSSProperties } from \"react\";\nimport { createStyles } from \"../../utils/style\";\nimport CheckBoxIcon from \"@mui/icons-material/CheckBox\";\nimport CheckBoxOutlineBlankIcon from \"@mui/icons-material/CheckBoxOutlineBlank\";\n\ninterface CheckboxProps {\n  labelText?: string;\n  isChecked: boolean;\n  onChange: () => void;\n}\nexport const CustomCheckbox = ({\n  labelText,\n  isChecked,\n  onChange,\n}: CheckboxProps) => {\n  const styles = createStyles<CSSProperties>()({\n    label: {\n      display: \"block\",\n      cursor: \"pointer\",\n      userSelect: \"none\",\n      paddingLeft: labelText ? \"2rem\" : \"0\",\n      position: \"relative\",\n      overflow: \"hidden\",\n      minWidth: labelText ? \"4rem\" : \"0\",\n    },\n    checkbox: {\n      opacity: 0,\n      cursor: \"pointer\",\n      position: \"absolute\",\n    },\n    icon: {\n      position: labelText ? \"absolute\" : \"static\",\n      fontSize: \"1.25rem\",\n      left: 0,\n    },\n  });\n\n  return (\n    <label style={styles.label}>\n      <input\n        type=\"checkbox\"\n        checked={isChecked}\n        onChange={onChange}\n        style={styles.checkbox}\n      />\n      {isChecked ? (\n        <CheckBoxIcon style={styles.icon} />\n      ) : (\n        <CheckBoxOutlineBlankIcon style={styles.icon} />\n      )}\n      {labelText}\n    </label>\n  );\n};\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;AAOO,MAAM,iBAAiB;QAAC,EAC7B,SAAS,EACT,SAAS,EACT,QAAQ,EACM;IACd,MAAM,SAAS,CAAA,GAAA,wHAAA,CAAA,eAAY,AAAD,IAAmB;QAC3C,OAAO;YACL,SAAS;YACT,QAAQ;YACR,YAAY;YACZ,aAAa,YAAY,SAAS;YAClC,UAAU;YACV,UAAU;YACV,UAAU,YAAY,SAAS;QACjC;QACA,UAAU;YACR,SAAS;YACT,QAAQ;YACR,UAAU;QACZ;QACA,MAAM;YACJ,UAAU,YAAY,aAAa;YACnC,UAAU;YACV,MAAM;QACR;IACF;IAEA,qBACE,6LAAC;QAAM,OAAO,OAAO,KAAK;;0BACxB,6LAAC;gBACC,MAAK;gBACL,SAAS;gBACT,UAAU;gBACV,OAAO,OAAO,QAAQ;;;;;;YAEvB,0BACC,6LAAC,gKAAA,CAAA,UAAY;gBAAC,OAAO,OAAO,IAAI;;;;;yEAEhC,6LAAC,4KAAA,CAAA,UAAwB;gBAAC,OAAO,OAAO,IAAI;;;;;;YAE7C;;;;;;;AAGP;KA3Ca","debugId":null}},
    {"offset": {"line": 138, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/advancedStats/RaterFilters.tsx"],"sourcesContent":["import { CSSProperties, useState } from \"react\";\nimport { StatsCategories } from \"../../utils/types\";\nimport { CustomButton } from \"../generic/CustomButton\";\nimport { CustomCheckbox } from \"../generic/CustomCheckbox\";\n\ninterface FiltersProps {\n  containerStyle: CSSProperties;\n  handleCategoryToggle: (category: StatsCategories) => void;\n  categoriesToOmit: StatsCategories[];\n}\nexport const RaterFilters = ({\n  containerStyle,\n  handleCategoryToggle,\n  categoriesToOmit,\n}: FiltersProps) => {\n  const [openFilters, setOpenFilters] = useState(false);\n\n  return (\n    <article style={containerStyle}>\n      <CustomButton\n        buttonText=\"Exclure\"\n        onClickButton={() => setOpenFilters(!openFilters)}\n      />\n      {openFilters &&\n        (Object.keys(StatsCategories) as Array<StatsCategories>).map(\n          (category) => (\n            <CustomCheckbox\n              labelText={category}\n              onChange={() => handleCategoryToggle(category)}\n              isChecked={categoriesToOmit.includes(category)}\n              key={category}\n            />\n          )\n        )}\n    </article>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;AAOO,MAAM,eAAe;QAAC,EAC3B,cAAc,EACd,oBAAoB,EACpB,gBAAgB,EACH;;IACb,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE/C,qBACE,6LAAC;QAAQ,OAAO;;0BACd,6LAAC,gJAAA,CAAA,eAAY;gBACX,YAAW;gBACX,eAAe,IAAM,eAAe,CAAC;;;;;;YAEtC,eACC,AAAC,OAAO,IAAI,CAAC,wHAAA,CAAA,kBAAe,EAA6B,GAAG,CAC1D,CAAC,yBACC,6LAAC,kJAAA,CAAA,iBAAc;oBACb,WAAW;oBACX,UAAU,IAAM,qBAAqB;oBACrC,WAAW,iBAAiB,QAAQ,CAAC;mBAChC;;;;;;;;;;;AAMnB;GA1Ba;KAAA","debugId":null}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/hooks/useSortColumns.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { PlayerWithAdvancedStats } from \"../components/advancedStats/AdvancedTable\";\nimport { PlayerWithProjection } from \"../components/teamDetails/RosterTable\";\nimport { TeamSortableData } from \"../components/teamsSummary/SummaryTable\";\n\nexport function useSortColumns<T>({ options }: { options: T[] }) {\n  const [sortOrder, setSortOrder] = useState(\"desc\");\n  const [columnIcon, setColumnIcon] = useState(\"\");\n  const [sortColumn, setSortColumn] = useState<\n    | keyof PlayerWithAdvancedStats\n    | keyof PlayerWithProjection\n    | keyof TeamSortableData\n  >(\"fullName\");\n  const [sortedOptions, setSortedOptions] = useState<T[]>(options);\n\n  const toggleSortOrder = () => {\n    setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n    setColumnIcon(columnIcon === \"↓\" ? \"↑\" : \"↓\");\n  };\n\n  const sortColumnByArgument = (column: keyof T) => {\n    toggleSortOrder();\n    setSortColumn(\n      column as\n        | keyof PlayerWithAdvancedStats\n        | keyof PlayerWithProjection\n        | keyof TeamSortableData\n    );\n    const sortedOptionsList = [...(options ?? [])].sort((a, b) => {\n      if (typeof a[column] === \"string\" && typeof b[column] === \"string\") {\n        if (sortOrder === \"asc\") {\n          return a[column].localeCompare(b[column]);\n        } else {\n          return b[column].localeCompare(a[column]);\n        }\n      } else if (\n        typeof a[column] === \"number\" &&\n        typeof b[column] === \"number\"\n      ) {\n        if (sortOrder === \"asc\") {\n          return a[column] - b[column];\n        } else {\n          return b[column] - a[column];\n        }\n      } else if (Array.isArray(a[column]) && Array.isArray(b[column])) {\n        if (sortOrder === \"asc\") {\n          return a[column].length - b[column].length;\n        } else {\n          return b[column].length - a[column].length;\n        }\n      } else {\n        return 0;\n      }\n    });\n    setSortedOptions(sortedOptionsList);\n  };\n\n  useEffect(() => {\n    setSortColumn(\"fullName\");\n    setSortedOptions(options);\n  }, [options]);\n\n  return {\n    sortOrder,\n    setSortOrder,\n    columnIcon,\n    setColumnIcon,\n    sortColumn,\n    setSortColumn,\n    sortedOptions,\n    setSortedOptions,\n    toggleSortOrder,\n    sortColumnByArgument,\n  };\n}\n"],"names":[],"mappings":";;;AAEA;;AAFA;;AAOO,SAAS,eAAkB,KAA6B;QAA7B,EAAE,OAAO,EAAoB,GAA7B;;IAChC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAIzC;IACF,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IAExD,MAAM,kBAAkB;QACtB,aAAa,cAAc,QAAQ,SAAS;QAC5C,cAAc,eAAe,MAAM,MAAM;IAC3C;IAEA,MAAM,uBAAuB,CAAC;QAC5B;QACA,cACE;QAKF,MAAM,oBAAoB;eAAK,oBAAA,qBAAA,UAAW,EAAE;SAAE,CAAC,IAAI,CAAC,CAAC,GAAG;YACtD,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,YAAY,OAAO,CAAC,CAAC,OAAO,KAAK,UAAU;gBAClE,IAAI,cAAc,OAAO;oBACvB,OAAO,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO;gBAC1C,OAAO;oBACL,OAAO,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO;gBAC1C;YACF,OAAO,IACL,OAAO,CAAC,CAAC,OAAO,KAAK,YACrB,OAAO,CAAC,CAAC,OAAO,KAAK,UACrB;gBACA,IAAI,cAAc,OAAO;oBACvB,OAAO,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO;gBAC9B,OAAO;oBACL,OAAO,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO;gBAC9B;YACF,OAAO,IAAI,MAAM,OAAO,CAAC,CAAC,CAAC,OAAO,KAAK,MAAM,OAAO,CAAC,CAAC,CAAC,OAAO,GAAG;gBAC/D,IAAI,cAAc,OAAO;oBACvB,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM;gBAC5C,OAAO;oBACL,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM;gBAC5C;YACF,OAAO;gBACL,OAAO;YACT;QACF;QACA,iBAAiB;IACnB;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,cAAc;YACd,iBAAiB;QACnB;mCAAG;QAAC;KAAQ;IAEZ,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GArEgB","debugId":null}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/advancedStats/AdvancedTable.tsx"],"sourcesContent":["import { CSSProperties, useCallback, useMemo } from \"react\";\nimport rosters from \"../../assets/teams/rosters.json\";\nimport {\n  FiltersType,\n  Player,\n  StatsCategories,\n  TeamDetailsData,\n} from \"../../utils/types\";\nimport { useSortColumns } from \"../../hooks/useSortColumns\";\nimport { PlayerWithProjection } from \"../teamDetails/RosterTable\";\nimport { useContext } from \"react\";\nimport { DataContext } from \"../../context/DataContext\";\n\nexport interface PlayerWithAdvancedStats extends PlayerWithProjection {\n  raterBySalary: number;\n  oldRaterBySalary: number;\n  raterByGames: number;\n  team: string;\n  raterByProjectedSalary: number;\n}\n\ninterface AdvancedTableProps {\n  headerStyle: CSSProperties;\n  cellStyle: CSSProperties;\n  categoriesToOmit: StatsCategories[];\n  advancedFilters: FiltersType;\n}\n\nexport const AdvancedTable = ({\n  headerStyle,\n  cellStyle,\n  categoriesToOmit,\n  advancedFilters,\n}: AdvancedTableProps) => {\n  const { dataByTeamId } = useContext(DataContext);\n\n  const averageGamesPlayed = useMemo(() => {\n    const gamesPlayed = rosters.teams\n      .map((team) => team.roster)\n      .flat()\n      .map((player) => player.gamesPlayed);\n    return gamesPlayed.reduce((a, b) => a + b) / gamesPlayed.length;\n  }, []);\n\n  const parsePlayerToAdvanced = useCallback(\n    (\n      player: Player,\n      teamName: string,\n      teamData: TeamDetailsData | undefined\n    ): PlayerWithAdvancedStats => {\n      let newCurrentRater = player.currentRater;\n      let newPreviousRater = player.previousRater;\n      if (categoriesToOmit.length) {\n        categoriesToOmit.forEach((category) => {\n          newCurrentRater -= player.categoriesRaters[category];\n          newPreviousRater -= player.previousCategoriesRaters[category];\n        });\n      }\n      const projectedSalary =\n        teamData?.newSalariesByPlayerId.get(player.id) || 0;\n      const raterByProjectedSalary = projectedSalary\n        ? newCurrentRater / projectedSalary\n        : 0;\n      return {\n        ...player,\n        currentRater: newCurrentRater,\n        previousRater: newPreviousRater,\n        raterBySalary: newCurrentRater / player.salary,\n        oldRaterBySalary: player.previousRater / player.salary,\n        raterByGames: player.gamesPlayed\n          ? (newCurrentRater / player.gamesPlayed) * averageGamesPlayed\n          : 0,\n        team: teamName,\n        projectedSalary,\n        raterByProjectedSalary,\n      };\n    },\n    [averageGamesPlayed, categoriesToOmit]\n  );\n\n  const flatPlayers = useMemo(() => {\n    return rosters.teams\n      .map((team) => {\n        const teamData = dataByTeamId.get(team.id);\n        return team.roster.map((player) => {\n          return parsePlayerToAdvanced(player, team.abbreviation, teamData);\n        });\n      })\n      .flat()\n      .filter((player) => {\n        return (\n          (advancedFilters.team\n            ? advancedFilters.team === player.team\n            : true) &&\n          (advancedFilters.rater?.min\n            ? advancedFilters.rater.min <= player.currentRater\n            : true) &&\n          (advancedFilters.rater?.max\n            ? advancedFilters.rater.max >= player.currentRater\n            : true) &&\n          (advancedFilters.salary?.min\n            ? advancedFilters.salary.min <= player.salary\n            : true) &&\n          (advancedFilters.salary?.max\n            ? advancedFilters.salary.max >= player.salary\n            : true) &&\n          (advancedFilters.projection?.min\n            ? advancedFilters.projection.min <= player.projectedSalary\n            : true) &&\n          (advancedFilters.projection?.max\n            ? advancedFilters.projection.max >= player.projectedSalary\n            : true) &&\n          (advancedFilters.games?.min\n            ? advancedFilters.games.min <= player.gamesPlayed\n            : true) &&\n          (advancedFilters.games?.max\n            ? advancedFilters.games.max >= player.gamesPlayed\n            : true)\n        );\n      });\n  }, [advancedFilters, parsePlayerToAdvanced, dataByTeamId]);\n\n  // const isLocal = location.hostname === \"localhost\";\n\n  const { columnIcon, sortColumn, sortedOptions, sortColumnByArgument } =\n    useSortColumns({ options: flatPlayers });\n\n  return (\n    <table>\n      <thead>\n        <th>Rk</th>\n        <th>Team</th>\n        <th\n          style={headerStyle}\n          onClick={() => sortColumnByArgument(\"fullName\")}\n        >\n          Nom {sortColumn === \"fullName\" ? columnIcon : null}\n        </th>\n        <th\n          style={headerStyle}\n          onClick={() => sortColumnByArgument(\"currentRater\")}\n        >\n          Rater {sortColumn === \"currentRater\" ? columnIcon : null}\n        </th>\n        <th style={headerStyle} onClick={() => sortColumnByArgument(\"salary\")}>\n          Salaire {sortColumn === \"salary\" ? columnIcon : null}\n        </th>\n        <th\n          style={headerStyle}\n          onClick={() => sortColumnByArgument(\"raterBySalary\")}\n        >\n          R / salaire {sortColumn === \"raterBySalary\" ? columnIcon : null}\n        </th>\n        {/* {isLocal && ( */}\n        <>\n          {/* <th\n              style={headerStyle}\n              onClick={() => sortColumnByArgument(\"previousRater\")}\n            >\n              Ancien rater {sortColumn === \"previousRater\" ? columnIcon : null}\n            </th>\n            <th\n              style={headerStyle}\n              onClick={() => sortColumnByArgument(\"oldRaterBySalary\")}\n            >\n              Ancien rater/salaire{\" \"}\n              {sortColumn === \"oldRaterBySalary\" ? columnIcon : null}\n            </th> */}\n          <th\n            style={headerStyle}\n            onClick={() => sortColumnByArgument(\"projectedSalary\")}\n          >\n            Projection {sortColumn === \"projectedSalary\" ? columnIcon : null}\n          </th>\n          <th\n            style={headerStyle}\n            onClick={() => sortColumnByArgument(\"raterByProjectedSalary\")}\n          >\n            R / projection{\" \"}\n            {sortColumn === \"raterByProjectedSalary\" ? columnIcon : null}\n          </th>\n        </>\n        <th\n          style={headerStyle}\n          onClick={() => sortColumnByArgument(\"gamesPlayed\")}\n        >\n          Matchs joués\n        </th>\n        <th\n          style={headerStyle}\n          onClick={() => sortColumnByArgument(\"raterByGames\")}\n        >\n          R / match\n        </th>\n      </thead>\n      <tbody>\n        {sortedOptions.map((player, index) => {\n          return (\n            <tr key={player.id}>\n              <td>{index + 1}</td>\n              <td>{player.team}</td>\n              <td style={cellStyle}>{player.fullName}</td>\n              <td style={cellStyle}>{player.currentRater.toFixed(2)}</td>\n              <td style={cellStyle}>{player.salary}</td>\n              <td style={cellStyle}>{player.raterBySalary.toFixed(2)}</td>\n              {/* {isLocal && ( */}\n              <>\n                {/* <td style={cellStyle}>{player.previousRater.toFixed(2)}</td>\n                  <td style={cellStyle}>\n                    {player.oldRaterBySalary.toFixed(2)}\n                  </td> */}\n                <td style={cellStyle}>{player.projectedSalary}</td>\n                <td style={cellStyle}>\n                  {player.raterByProjectedSalary.toFixed(2)}\n                </td>\n              </>\n              {/* )} */}\n              <td style={cellStyle}>{player.gamesPlayed}</td>\n              <td style={cellStyle}>{player.raterByGames.toFixed(2)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/advancedStats/AdvancedFilters.tsx"],"sourcesContent":["import { CSSProperties, useCallback, useState } from \"react\";\nimport { FiltersType, FilterCategories } from \"../../utils/types\";\nimport { CustomButton } from \"../generic/CustomButton\";\nimport { CustomCheckbox } from \"../generic/CustomCheckbox\";\nimport { createStyles } from \"../../utils/style\";\n\ninterface FiltersProps {\n  advancedFilters: FiltersType;\n  handleFilterChange: (\n    filterName: FilterCategories,\n    filterValue?: string\n  ) => void;\n}\n\nexport const AdvancedFilters = ({\n  advancedFilters,\n  handleFilterChange,\n}: FiltersProps) => {\n  const styles = createStyles<CSSProperties>()({\n    filtersContainer: {\n      display: \"flex\",\n      flexFlow: \"row wrap\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      gap: \"0.25rem\",\n      margin: \"0.5rem 0\",\n    },\n    input: {\n      borderRadius: \"0.75rem\",\n      border: \"none\",\n      padding: \"0.5rem 1rem\",\n      fontSize: \"1rem\",\n      fontFamily: \"inherit\",\n      width: \"3rem\",\n      margin: \"0 0.25rem 0.25rem 0.25rem\",\n    },\n    checkBoxesContainer: {\n      display: \"flex\",\n      flexFlow: \"row wrap\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\",\n      width: \"calc(100% - 10rem)\",\n    },\n    subFiltersContainer: {\n      display: \"flex\",\n      flexFlow: \"row wrap\",\n      justifyContent: \"space-evenly\",\n      alignItems: \"center\",\n      width: \"calc(100% - 10rem)\",\n      marginLeft: \"10rem\",\n    },\n    inputContainer: {\n      display: \"flex\",\n      flexFlow: \"row wrap\",\n      justifyContent: \"center\",\n      alignItems: \"flex-end\",\n    },\n    inputLabel: {\n      width: \"100%\",\n      textAlign: \"center\",\n    },\n  });\n\n  const [openFilters, setOpenFilters] = useState(false);\n  const [activeFilters, setActiveFilters] = useState<FilterCategories[]>([]);\n\n  // const isLocal = location.hostname === \"localhost\";\n\n  const handleFilterToggle = useCallback(\n    (newFilter: FilterCategories) => {\n      if (activeFilters.includes(newFilter)) {\n        setActiveFilters((prev) =>\n          prev.filter((filter) => filter !== newFilter)\n        );\n        handleFilterChange(newFilter);\n      } else {\n        setActiveFilters([...activeFilters, newFilter]);\n      }\n    },\n    [activeFilters, handleFilterChange]\n  );\n\n  return (\n    <article style={styles.filtersContainer}>\n      <CustomButton\n        buttonText=\"Filtrer\"\n        onClickButton={() => setOpenFilters(!openFilters)}\n      />\n      {openFilters && (\n        <>\n          <div style={styles.checkBoxesContainer}>\n            {(Object.values(FilterCategories) as Array<FilterCategories>)\n              .filter((filter) => {\n                // if (isLocal) {\n                return filter;\n                // }\n                // return filter !== FilterCategories.PROJECTION;\n              })\n              .map((filter) => (\n                <CustomCheckbox\n                  labelText={filter}\n                  onChange={() => handleFilterToggle(filter)}\n                  isChecked={activeFilters.includes(filter)}\n                  key={filter}\n                />\n              ))}\n          </div>\n          <div style={styles.subFiltersContainer}>\n            {activeFilters.includes(FilterCategories.TEAM) && (\n              <div\n                style={{\n                  ...styles.inputContainer,\n                  paddingTop: \"1rem\",\n                }}\n              >\n                <input\n                  type=\"text\"\n                  style={styles.input}\n                  value={advancedFilters.team ?? \"\"}\n                  onChange={(event) =>\n                    handleFilterChange(\n                      FilterCategories.TEAM,\n                      event.currentTarget.value\n                    )\n                  }\n                  placeholder=\"team\"\n                />\n              </div>\n            )}\n            {activeFilters.includes(FilterCategories.RATER) && (\n              <div style={styles.inputContainer}>\n                <p style={styles.inputLabel}>rater</p>\n                <input\n                  type=\"number\"\n                  style={styles.input}\n                  value={advancedFilters.rater?.min}\n                  onChange={(event) =>\n                    handleFilterChange(\n                      FilterCategories.RATER,\n                      \"min:\" + event.currentTarget.value\n                    )\n                  }\n                  placeholder=\"min\"\n                />\n                <input\n                  type=\"number\"\n                  style={styles.input}\n                  value={advancedFilters.rater?.max}\n                  onChange={(event) =>\n                    handleFilterChange(\n                      FilterCategories.RATER,\n                      \"max:\" + event.currentTarget.value\n                    )\n                  }\n                  placeholder=\"max\"\n                />\n              </div>\n            )}\n            {activeFilters.includes(FilterCategories.SALARY) && (\n              <div style={styles.inputContainer}>\n                <p style={styles.inputLabel}>salaire</p>\n                <input\n                  type=\"number\"\n                  style={styles.input}\n                  value={advancedFilters.salary?.min}\n                  onChange={(event) =>\n                    handleFilterChange(\n                      FilterCategories.SALARY,\n                      \"min:\" + event.currentTarget.value\n                    )\n                  }\n                  placeholder=\"min\"\n                />\n                <input\n                  type=\"number\"\n                  style={styles.input}\n                  value={advancedFilters.salary?.max}\n                  onChange={(event) =>\n                    handleFilterChange(\n                      FilterCategories.SALARY,\n                      \"max:\" + event.currentTarget.value\n                    )\n                  }\n                  placeholder=\"max\"\n                />\n              </div>\n            )}\n            {activeFilters.includes(FilterCategories.PROJECTION) && (\n              <div style={styles.inputContainer}>\n                <p style={styles.inputLabel}>projection</p>\n                <input\n                  type=\"number\"\n                  style={styles.input}\n                  value={advancedFilters.projection?.min}\n                  onChange={(event) =>\n                    handleFilterChange(\n                      FilterCategories.PROJECTION,\n                      \"min:\" + event.currentTarget.value\n                    )\n                  }\n                  placeholder=\"min\"\n                />\n                <input\n                  type=\"number\"\n                  style={styles.input}\n                  value={advancedFilters.projection?.max}\n                  onChange={(event) =>\n                    handleFilterChange(\n                      FilterCategories.PROJECTION,\n                      \"max:\" + event.currentTarget.value\n                    )\n                  }\n                  placeholder=\"max\"\n                />\n              </div>\n            )}\n            {activeFilters.includes(FilterCategories.GAMES) && (\n              <div style={styles.inputContainer}>\n                <p style={styles.inputLabel}>matchs</p>\n                <input\n                  type=\"number\"\n                  style={styles.input}\n                  value={advancedFilters.games?.min}\n                  onChange={(event) =>\n                    handleFilterChange(\n                      FilterCategories.GAMES,\n                      \"min:\" + event.currentTarget.value\n                    )\n                  }\n                  placeholder=\"min\"\n                />\n                <input\n                  type=\"number\"\n                  style={styles.input}\n                  value={advancedFilters.games?.max}\n                  onChange={(event) =>\n                    handleFilterChange(\n                      FilterCategories.GAMES,\n                      \"max:\" + event.currentTarget.value\n                    )\n                  }\n                  placeholder=\"max\"\n                />\n              </div>\n            )}\n          </div>\n        </>\n      )}\n    </article>\n  );\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 937, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/pages/AdvancedStats.tsx"],"sourcesContent":["\"use client\";\n\nimport { CSSProperties, ReactElement, useCallback, useState } from \"react\";\nimport { FilterCategories, FiltersType, StatsCategories } from \"../utils/types\";\nimport { createStyles } from \"../utils/style\";\nimport { RaterFilters } from \"../components/advancedStats/RaterFilters\";\nimport { AdvancedTable } from \"../components/advancedStats/AdvancedTable\";\nimport { AdvancedFilters } from \"../components/advancedStats/AdvancedFilters\";\n\nexport const AdvancedStats = (): ReactElement => {\n  const [categoriesToOmit, setCategoriesToOmit] = useState<StatsCategories[]>(\n    []\n  );\n  const [advancedFilters, setAdvancedFilters] = useState<FiltersType>({});\n\n  const styles = createStyles<CSSProperties>()({\n    columnHeader: {\n      cursor: \"pointer\",\n    },\n    filtersContainer: {\n      display: \"flex\",\n      flexFlow: \"row wrap\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      gap: \"0.25rem\",\n      margin: \"0.5rem 0\",\n    },\n    filtersTitle: {\n      width: \"fit-content\",\n    },\n    tableCell: {\n      maxWidth: \"calc(100% / 9)\",\n    },\n  });\n\n  const handleCategoryToggle = useCallback(\n    (category: StatsCategories) => {\n      if (categoriesToOmit.includes(category)) {\n        setCategoriesToOmit((prev) => prev.filter((cat) => cat !== category));\n        return;\n      }\n      setCategoriesToOmit((prev) => [...prev, category]);\n    },\n    [categoriesToOmit]\n  );\n\n  const handleFilterChange = useCallback(\n    (filterName: FilterCategories, filterValue?: string) => {\n      if (filterName === FilterCategories.TEAM) {\n        setAdvancedFilters((prev) => {\n          return { ...prev, team: filterValue };\n        });\n      } else if (filterValue) {\n        const parsedValue = filterValue.split(\":\");\n        setAdvancedFilters((prev) => {\n          return {\n            ...prev,\n            [filterName]: {\n              ...prev[filterName],\n              [parsedValue[0]]: parsedValue[1],\n            },\n          };\n        });\n      } else {\n        setAdvancedFilters((prev) => {\n          return { ...prev, [filterName]: filterValue };\n        });\n      }\n    },\n    [setAdvancedFilters]\n  );\n\n  return (\n    <main>\n      <section>\n        <h2>Statistiques avancées</h2>\n        <RaterFilters\n          containerStyle={styles.filtersContainer}\n          handleCategoryToggle={handleCategoryToggle}\n          categoriesToOmit={categoriesToOmit}\n        />\n        <AdvancedFilters\n          advancedFilters={advancedFilters}\n          handleFilterChange={handleFilterChange}\n        />\n        <AdvancedTable\n          headerStyle={styles.columnHeader}\n          cellStyle={styles.tableCell}\n          categoriesToOmit={categoriesToOmit}\n          advancedFilters={advancedFilters}\n        />\n      </section>\n      <section>\n        <p>\n          * : Les chiffres pour le rater par matchs joués sont multipliés par le\n          nombre moyen de matchs joués, pour avoir des chiffres plus lisibles.\n        </p>\n      </section>\n    </main>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AASO,MAAM,gBAAgB;;IAC3B,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EACrD,EAAE;IAEJ,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAe,CAAC;IAErE,MAAM,SAAS,CAAA,GAAA,wHAAA,CAAA,eAAY,AAAD,IAAmB;QAC3C,cAAc;YACZ,QAAQ;QACV;QACA,kBAAkB;YAChB,SAAS;YACT,UAAU;YACV,gBAAgB;YAChB,YAAY;YACZ,KAAK;YACL,QAAQ;QACV;QACA,cAAc;YACZ,OAAO;QACT;QACA,WAAW;YACT,UAAU;QACZ;IACF;IAEA,MAAM,uBAAuB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;2DACrC,CAAC;YACC,IAAI,iBAAiB,QAAQ,CAAC,WAAW;gBACvC;uEAAoB,CAAC,OAAS,KAAK,MAAM;+EAAC,CAAC,MAAQ,QAAQ;;;gBAC3D;YACF;YACA;mEAAoB,CAAC,OAAS;2BAAI;wBAAM;qBAAS;;QACnD;0DACA;QAAC;KAAiB;IAGpB,MAAM,qBAAqB,CAAA,GAAA,6JAAA,CAAA,cAAW,AAAD;yDACnC,CAAC,YAA8B;YAC7B,IAAI,eAAe,wHAAA,CAAA,mBAAgB,CAAC,IAAI,EAAE;gBACxC;qEAAmB,CAAC;wBAClB,OAAO;4BAAE,GAAG,IAAI;4BAAE,MAAM;wBAAY;oBACtC;;YACF,OAAO,IAAI,aAAa;gBACtB,MAAM,cAAc,YAAY,KAAK,CAAC;gBACtC;qEAAmB,CAAC;wBAClB,OAAO;4BACL,GAAG,IAAI;4BACP,CAAC,WAAW,EAAE;gCACZ,GAAG,IAAI,CAAC,WAAW;gCACnB,CAAC,WAAW,CAAC,EAAE,CAAC,EAAE,WAAW,CAAC,EAAE;4BAClC;wBACF;oBACF;;YACF,OAAO;gBACL;qEAAmB,CAAC;wBAClB,OAAO;4BAAE,GAAG,IAAI;4BAAE,CAAC,WAAW,EAAE;wBAAY;oBAC9C;;YACF;QACF;wDACA;QAAC;KAAmB;IAGtB,qBACE,6LAAC;;0BACC,6LAAC;;kCACC,6LAAC;kCAAG;;;;;;kCACJ,6LAAC,sJAAA,CAAA,eAAY;wBACX,gBAAgB,OAAO,gBAAgB;wBACvC,sBAAsB;wBACtB,kBAAkB;;;;;;kCAEpB,6LAAC,yJAAA,CAAA,kBAAe;wBACd,iBAAiB;wBACjB,oBAAoB;;;;;;kCAEtB,6LAAC,uJAAA,CAAA,gBAAa;wBACZ,aAAa,OAAO,YAAY;wBAChC,WAAW,OAAO,SAAS;wBAC3B,kBAAkB;wBAClB,iBAAiB;;;;;;;;;;;;0BAGrB,6LAAC;0BACC,cAAA,6LAAC;8BAAE;;;;;;;;;;;;;;;;;AAOX;GA3Fa;KAAA","debugId":null}}]
}