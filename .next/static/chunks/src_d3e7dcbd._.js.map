{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/hooks/useSortColumns.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState } from \"react\";\nimport { PlayerWithAdvancedStats } from \"../components/advancedStats/AdvancedTable\";\nimport { PlayerWithProjection } from \"../components/teamDetails/RosterTable\";\nimport { TeamSortableData } from \"../components/teamsSummary/SummaryTable\";\n\nexport function useSortColumns<T>({ options }: { options: T[] }) {\n  const [sortOrder, setSortOrder] = useState(\"desc\");\n  const [columnIcon, setColumnIcon] = useState(\"\");\n  const [sortColumn, setSortColumn] = useState<\n    | keyof PlayerWithAdvancedStats\n    | keyof PlayerWithProjection\n    | keyof TeamSortableData\n  >(\"fullName\");\n  const [sortedOptions, setSortedOptions] = useState<T[]>(options);\n\n  const toggleSortOrder = () => {\n    setSortOrder(sortOrder === \"asc\" ? \"desc\" : \"asc\");\n    setColumnIcon(columnIcon === \"↓\" ? \"↑\" : \"↓\");\n  };\n\n  const sortColumnByArgument = (column: keyof T) => {\n    toggleSortOrder();\n    setSortColumn(\n      column as\n        | keyof PlayerWithAdvancedStats\n        | keyof PlayerWithProjection\n        | keyof TeamSortableData\n    );\n    const sortedOptionsList = [...(options ?? [])].sort((a, b) => {\n      if (typeof a[column] === \"string\" && typeof b[column] === \"string\") {\n        if (sortOrder === \"asc\") {\n          return a[column].localeCompare(b[column]);\n        } else {\n          return b[column].localeCompare(a[column]);\n        }\n      } else if (\n        typeof a[column] === \"number\" &&\n        typeof b[column] === \"number\"\n      ) {\n        if (sortOrder === \"asc\") {\n          return a[column] - b[column];\n        } else {\n          return b[column] - a[column];\n        }\n      } else if (Array.isArray(a[column]) && Array.isArray(b[column])) {\n        if (sortOrder === \"asc\") {\n          return a[column].length - b[column].length;\n        } else {\n          return b[column].length - a[column].length;\n        }\n      } else {\n        return 0;\n      }\n    });\n    setSortedOptions(sortedOptionsList);\n  };\n\n  useEffect(() => {\n    setSortColumn(\"fullName\");\n    setSortedOptions(options);\n  }, [options]);\n\n  return {\n    sortOrder,\n    setSortOrder,\n    columnIcon,\n    setColumnIcon,\n    sortColumn,\n    setSortColumn,\n    sortedOptions,\n    setSortedOptions,\n    toggleSortOrder,\n    sortColumnByArgument,\n  };\n}\n"],"names":[],"mappings":";;;AAEA;;AAFA;;AAOO,SAAS,eAAkB,KAA6B;QAA7B,EAAE,OAAO,EAAoB,GAA7B;;IAChC,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC7C,MAAM,CAAC,YAAY,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAIzC;IACF,MAAM,CAAC,eAAe,iBAAiB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAO;IAExD,MAAM,kBAAkB;QACtB,aAAa,cAAc,QAAQ,SAAS;QAC5C,cAAc,eAAe,MAAM,MAAM;IAC3C;IAEA,MAAM,uBAAuB,CAAC;QAC5B;QACA,cACE;QAKF,MAAM,oBAAoB;eAAK,oBAAA,qBAAA,UAAW,EAAE;SAAE,CAAC,IAAI,CAAC,CAAC,GAAG;YACtD,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK,YAAY,OAAO,CAAC,CAAC,OAAO,KAAK,UAAU;gBAClE,IAAI,cAAc,OAAO;oBACvB,OAAO,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO;gBAC1C,OAAO;oBACL,OAAO,CAAC,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,OAAO;gBAC1C;YACF,OAAO,IACL,OAAO,CAAC,CAAC,OAAO,KAAK,YACrB,OAAO,CAAC,CAAC,OAAO,KAAK,UACrB;gBACA,IAAI,cAAc,OAAO;oBACvB,OAAO,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO;gBAC9B,OAAO;oBACL,OAAO,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,OAAO;gBAC9B;YACF,OAAO,IAAI,MAAM,OAAO,CAAC,CAAC,CAAC,OAAO,KAAK,MAAM,OAAO,CAAC,CAAC,CAAC,OAAO,GAAG;gBAC/D,IAAI,cAAc,OAAO;oBACvB,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM;gBAC5C,OAAO;oBACL,OAAO,CAAC,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM;gBAC5C;YACF,OAAO;gBACL,OAAO;YACT;QACF;QACA,iBAAiB;IACnB;IAEA,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;oCAAE;YACR,cAAc;YACd,iBAAiB;QACnB;mCAAG;QAAC;KAAQ;IAEZ,OAAO;QACL;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;IACF;AACF;GArEgB","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/components/teamsSummary/SummaryTable.tsx"],"sourcesContent":["import { ReactElement, useMemo } from \"react\";\nimport { useSortColumns } from \"../../hooks/useSortColumns\";\nimport { useContext } from \"react\";\nimport { DataContext } from \"../../context/DataContext\";\n\nexport interface TeamSortableData {\n  id: number;\n  name: string;\n  currentSalaries: number;\n  currentMargin: number;\n  previousRaters: number;\n  currentRaters: number;\n}\n\nexport const SummaryTable = (): ReactElement => {\n  const { dataByTeamId } = useContext(DataContext);\n\n  const sortableTeams = useMemo(() => {\n    const sortableTeamsData: TeamSortableData[] = [];\n    dataByTeamId.forEach((team) => {\n      sortableTeamsData.push({\n        name: team.team.name,\n        currentSalaries: team.totals.currentSalary,\n        currentMargin: 220 - team.totals.currentSalary,\n        previousRaters: team.totals.rater2024,\n        currentRaters: team.totals.rater2025,\n        id: team.team.id,\n      });\n    });\n    return sortableTeamsData;\n  }, [dataByTeamId]);\n\n  const { columnIcon, sortColumn, sortedOptions, sortColumnByArgument } =\n    useSortColumns({ options: sortableTeams });\n\n  const tableContent = useMemo(() => {\n    return sortedOptions.map((team) => (\n      <tr key={team.id}>\n        <td>{team.name}</td>\n        <td>{team.currentSalaries}</td>\n        <td>{team.currentMargin}</td>\n        <td>{team.previousRaters.toFixed(2)}</td>\n        <td>{team.currentRaters.toFixed(2)}</td>\n      </tr>\n    ));\n  }, [sortedOptions]);\n\n  return (\n    <section>\n      <h2>Masses salariales</h2>\n      <table>\n        <thead>\n          <tr>\n            <th\n              onClick={() => sortColumnByArgument(\"name\")}\n              style={{\n                cursor: \"pointer\",\n              }}\n            >\n              Équipe {sortColumn === \"name\" ? columnIcon : null}\n            </th>\n            <th\n              onClick={() => sortColumnByArgument(\"currentSalaries\")}\n              style={{\n                cursor: \"pointer\",\n              }}\n            >\n              Salaires {sortColumn === \"currentSalaries\" ? columnIcon : null}\n            </th>\n            <th\n              onClick={() => sortColumnByArgument(\"currentMargin\")}\n              style={{\n                cursor: \"pointer\",\n              }}\n            >\n              Marge {sortColumn === \"currentMargin\" ? columnIcon : null}\n            </th>\n            <th\n              onClick={() => sortColumnByArgument(\"previousRaters\")}\n              style={{\n                cursor: \"pointer\",\n              }}\n            >\n              PR passé {sortColumn === \"previousRaters\" ? columnIcon : null}\n            </th>\n            <th\n              onClick={() => sortColumnByArgument(\"currentRaters\")}\n              style={{\n                cursor: \"pointer\",\n              }}\n            >\n              PR actuel {sortColumn === \"currentRaters\" ? columnIcon : null}\n            </th>\n          </tr>\n        </thead>\n        <tbody>{tableContent}</tbody>\n      </table>\n    </section>\n  );\n};\n"],"names":[],"mappings":";;;;AAAA;AACA;AAEA;;;;;;;AAWO,MAAM,eAAe;;IAC1B,MAAM,EAAE,YAAY,EAAE,GAAG,CAAA,GAAA,6JAAA,CAAA,aAAU,AAAD,EAAE,iIAAA,CAAA,cAAW;IAE/C,MAAM,gBAAgB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;+CAAE;YAC5B,MAAM,oBAAwC,EAAE;YAChD,aAAa,OAAO;uDAAC,CAAC;oBACpB,kBAAkB,IAAI,CAAC;wBACrB,MAAM,KAAK,IAAI,CAAC,IAAI;wBACpB,iBAAiB,KAAK,MAAM,CAAC,aAAa;wBAC1C,eAAe,MAAM,KAAK,MAAM,CAAC,aAAa;wBAC9C,gBAAgB,KAAK,MAAM,CAAC,SAAS;wBACrC,eAAe,KAAK,MAAM,CAAC,SAAS;wBACpC,IAAI,KAAK,IAAI,CAAC,EAAE;oBAClB;gBACF;;YACA,OAAO;QACT;8CAAG;QAAC;KAAa;IAEjB,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,aAAa,EAAE,oBAAoB,EAAE,GACnE,CAAA,GAAA,kIAAA,CAAA,iBAAc,AAAD,EAAE;QAAE,SAAS;IAAc;IAE1C,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;8CAAE;YAC3B,OAAO,cAAc,GAAG;sDAAC,CAAC,qBACxB,6LAAC;;0CACC,6LAAC;0CAAI,KAAK,IAAI;;;;;;0CACd,6LAAC;0CAAI,KAAK,eAAe;;;;;;0CACzB,6LAAC;0CAAI,KAAK,aAAa;;;;;;0CACvB,6LAAC;0CAAI,KAAK,cAAc,CAAC,OAAO,CAAC;;;;;;0CACjC,6LAAC;0CAAI,KAAK,aAAa,CAAC,OAAO,CAAC;;;;;;;uBALzB,KAAK,EAAE;;;;;;QAQpB;6CAAG;QAAC;KAAc;IAElB,qBACE,6LAAC;;0BACC,6LAAC;0BAAG;;;;;;0BACJ,6LAAC;;kCACC,6LAAC;kCACC,cAAA,6LAAC;;8CACC,6LAAC;oCACC,SAAS,IAAM,qBAAqB;oCACpC,OAAO;wCACL,QAAQ;oCACV;;wCACD;wCACS,eAAe,SAAS,aAAa;;;;;;;8CAE/C,6LAAC;oCACC,SAAS,IAAM,qBAAqB;oCACpC,OAAO;wCACL,QAAQ;oCACV;;wCACD;wCACW,eAAe,oBAAoB,aAAa;;;;;;;8CAE5D,6LAAC;oCACC,SAAS,IAAM,qBAAqB;oCACpC,OAAO;wCACL,QAAQ;oCACV;;wCACD;wCACQ,eAAe,kBAAkB,aAAa;;;;;;;8CAEvD,6LAAC;oCACC,SAAS,IAAM,qBAAqB;oCACpC,OAAO;wCACL,QAAQ;oCACV;;wCACD;wCACW,eAAe,mBAAmB,aAAa;;;;;;;8CAE3D,6LAAC;oCACC,SAAS,IAAM,qBAAqB;oCACpC,OAAO;wCACL,QAAQ;oCACV;;wCACD;wCACY,eAAe,kBAAkB,aAAa;;;;;;;;;;;;;;;;;;kCAI/D,6LAAC;kCAAO;;;;;;;;;;;;;;;;;;AAIhB;GArFa;;QAmBT,kIAAA,CAAA,iBAAc;;;KAnBL","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///home/floran/Documents/travail/real/fantasyLeagueHelper/src/pages/TeamsSummary.tsx"],"sourcesContent":["\"use client\";\n\nimport { SummaryTable } from \"../components/teamsSummary/SummaryTable\";\n\nexport const TeamsSummary = () => {\n  return (\n    <main>\n      <SummaryTable />\n    </main>\n  );\n};\n"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAIO,MAAM,eAAe;IAC1B,qBACE,6LAAC;kBACC,cAAA,6LAAC,qJAAA,CAAA,eAAY;;;;;;;;;;AAGnB;KANa","debugId":null}}]
}